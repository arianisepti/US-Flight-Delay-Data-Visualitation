<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20242.24.0807.0327                               -->
<workbook original-version='18.1' source-build='2024.2.2 (20242.24.0807.0327)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <_.fcp.Layers.true...Layers />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Airline_Delay_Cause (Book1)' inline='true' name='federated.04lojza1uh8vuz185ek9h1iakmoz' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Book1' name='excel-direct.13b78kx0xcq3ul110pj9y1nj6juj'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/Perkuliahan/Portofolio/Book1.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.13b78kx0xcq3ul110pj9y1nj6juj' name='Airline_Delay_Cause' table='[Airline_Delay_Cause$]' type='table'>
          <columns gridOrigin='A1:O10001:no:A1:O10001:0' header='yes' outcome='2'>
            <column datatype='integer' name='year' ordinal='0' />
            <column datatype='integer' name='month' ordinal='1' />
            <column datatype='date' date-parse-format='MMMM yyyy' name='Date' ordinal='2' />
            <column datatype='string' name='carrier' ordinal='3' />
            <column datatype='string' name='carrier_name' ordinal='4' />
            <column datatype='string' name='airport' ordinal='5' />
            <column datatype='string' name='city' ordinal='6' />
            <column datatype='string' name='state' ordinal='7' />
            <column datatype='string' name='airport_name' ordinal='8' />
            <column datatype='integer' name='arr_delay' ordinal='9' />
            <column datatype='integer' name='carrier_delay' ordinal='10' />
            <column datatype='integer' name='weather_delay' ordinal='11' />
            <column datatype='integer' name='nas_delay' ordinal='12' />
            <column datatype='integer' name='security_delay' ordinal='13' />
            <column datatype='integer' name='late_aircraft_delay' ordinal='14' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.13b78kx0xcq3ul110pj9y1nj6juj' name='Airline_Delay_Cause' table='[Airline_Delay_Cause$]' type='table'>
          <columns gridOrigin='A1:O10001:no:A1:O10001:0' header='yes' outcome='2'>
            <column datatype='integer' name='year' ordinal='0' />
            <column datatype='integer' name='month' ordinal='1' />
            <column datatype='date' date-parse-format='MMMM yyyy' name='Date' ordinal='2' />
            <column datatype='string' name='carrier' ordinal='3' />
            <column datatype='string' name='carrier_name' ordinal='4' />
            <column datatype='string' name='airport' ordinal='5' />
            <column datatype='string' name='city' ordinal='6' />
            <column datatype='string' name='state' ordinal='7' />
            <column datatype='string' name='airport_name' ordinal='8' />
            <column datatype='integer' name='arr_delay' ordinal='9' />
            <column datatype='integer' name='carrier_delay' ordinal='10' />
            <column datatype='integer' name='weather_delay' ordinal='11' />
            <column datatype='integer' name='nas_delay' ordinal='12' />
            <column datatype='integer' name='security_delay' ordinal='13' />
            <column datatype='integer' name='late_aircraft_delay' ordinal='14' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Airline_Delay_Cause]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:O10001:no:A1:O10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[Airline_Delay_Cause]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airline!Delay!Cause_E1669AAE7A0741A1B8F4D718D1130AF4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month</remote-name>
            <remote-type>20</remote-type>
            <local-name>[month]</local-name>
            <parent-name>[Airline_Delay_Cause]</parent-name>
            <remote-alias>month</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airline!Delay!Cause_E1669AAE7A0741A1B8F4D718D1130AF4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[Airline_Delay_Cause]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RID_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airline!Delay!Cause_E1669AAE7A0741A1B8F4D718D1130AF4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>carrier</remote-name>
            <remote-type>130</remote-type>
            <local-name>[carrier]</local-name>
            <parent-name>[Airline_Delay_Cause]</parent-name>
            <remote-alias>carrier</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RID_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airline!Delay!Cause_E1669AAE7A0741A1B8F4D718D1130AF4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>carrier_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[carrier_name]</local-name>
            <parent-name>[Airline_Delay_Cause]</parent-name>
            <remote-alias>carrier_name</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RID_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airline!Delay!Cause_E1669AAE7A0741A1B8F4D718D1130AF4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>airport</remote-name>
            <remote-type>130</remote-type>
            <local-name>[airport]</local-name>
            <parent-name>[Airline_Delay_Cause]</parent-name>
            <remote-alias>airport</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RID_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airline!Delay!Cause_E1669AAE7A0741A1B8F4D718D1130AF4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city</remote-name>
            <remote-type>130</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[Airline_Delay_Cause]</parent-name>
            <remote-alias>city</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RID_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airline!Delay!Cause_E1669AAE7A0741A1B8F4D718D1130AF4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>130</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[Airline_Delay_Cause]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RID_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airline!Delay!Cause_E1669AAE7A0741A1B8F4D718D1130AF4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>airport_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[airport_name]</local-name>
            <parent-name>[Airline_Delay_Cause]</parent-name>
            <remote-alias>airport_name</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RID_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airline!Delay!Cause_E1669AAE7A0741A1B8F4D718D1130AF4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>arr_delay</remote-name>
            <remote-type>20</remote-type>
            <local-name>[arr_delay]</local-name>
            <parent-name>[Airline_Delay_Cause]</parent-name>
            <remote-alias>arr_delay</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airline!Delay!Cause_E1669AAE7A0741A1B8F4D718D1130AF4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>carrier_delay</remote-name>
            <remote-type>20</remote-type>
            <local-name>[carrier_delay]</local-name>
            <parent-name>[Airline_Delay_Cause]</parent-name>
            <remote-alias>carrier_delay</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airline!Delay!Cause_E1669AAE7A0741A1B8F4D718D1130AF4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weather_delay</remote-name>
            <remote-type>20</remote-type>
            <local-name>[weather_delay]</local-name>
            <parent-name>[Airline_Delay_Cause]</parent-name>
            <remote-alias>weather_delay</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airline!Delay!Cause_E1669AAE7A0741A1B8F4D718D1130AF4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>nas_delay</remote-name>
            <remote-type>20</remote-type>
            <local-name>[nas_delay]</local-name>
            <parent-name>[Airline_Delay_Cause]</parent-name>
            <remote-alias>nas_delay</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airline!Delay!Cause_E1669AAE7A0741A1B8F4D718D1130AF4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>security_delay</remote-name>
            <remote-type>20</remote-type>
            <local-name>[security_delay]</local-name>
            <parent-name>[Airline_Delay_Cause]</parent-name>
            <remote-alias>security_delay</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airline!Delay!Cause_E1669AAE7A0741A1B8F4D718D1130AF4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>late_aircraft_delay</remote-name>
            <remote-type>20</remote-type>
            <local-name>[late_aircraft_delay]</local-name>
            <parent-name>[Airline_Delay_Cause]</parent-name>
            <remote-alias>late_aircraft_delay</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airline!Delay!Cause_E1669AAE7A0741A1B8F4D718D1130AF4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Carrier Delay Presentation' datatype='real' name='[Calculation_792915062856564736]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[carrier_delay]/[arr_delay]' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='Airline_Delay_Cause' datatype='table' name='[__tableau_internal_object_id__].[Airline!Delay!Cause_E1669AAE7A0741A1B8F4D718D1130AF4]' role='measure' type='quantitative' />
      <column caption='Airport' datatype='string' name='[airport]' role='dimension' type='nominal' />
      <column caption='Airport Name' datatype='string' name='[airport_name]' role='dimension' type='nominal' />
      <column caption='Arr Delay' datatype='integer' name='[arr_delay]' role='measure' type='quantitative' />
      <column caption='Carrier' datatype='string' name='[carrier]' role='dimension' type='nominal' />
      <column caption='Carrier Delay' datatype='integer' name='[carrier_delay]' role='measure' type='quantitative' />
      <column caption='Carrier Name' datatype='string' name='[carrier_name]' role='dimension' type='nominal' />
      <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Late Aircraft Delay' datatype='integer' name='[late_aircraft_delay]' role='measure' type='quantitative' />
      <column caption='Month' datatype='integer' name='[month]' role='dimension' type='quantitative' />
      <column caption='Nas Delay' datatype='integer' name='[nas_delay]' role='measure' type='quantitative' />
      <column caption='Security Delay' datatype='integer' name='[security_delay]' role='measure' type='quantitative' />
      <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Weather Delay' datatype='integer' name='[weather_delay]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <column-instance column='[carrier]' derivation='None' name='[none:carrier:nk]' pivot='key' type='nominal' />
      <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
      <group caption='Action (Carrier)' hidden='true' name='[Action (Carrier)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[carrier]' />
        </groupfilter>
      </group>
      <group caption='Action (City,State)' hidden='true' name='[Action (City,State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[city]' />
          <groupfilter function='level-members' level='[state]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='state, city'>
          <field>[state]</field>
          <field>[city]</field>
        </drill-path>
      </drill-paths>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/MYBOOK~1/AppData/Local/Temp/TableauTemp/#TableauTemp_0grm8ac15nluvk1gf6ut517pusz1.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='08/22/2024 12:01:37 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>year</remote-alias>
              <ordinal>0</ordinal>
              <family>Airline_Delay_Cause</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airline!Delay!Cause_E1669AAE7A0741A1B8F4D718D1130AF4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>month</remote-name>
              <remote-type>20</remote-type>
              <local-name>[month]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>month</remote-alias>
              <ordinal>1</ordinal>
              <family>Airline_Delay_Cause</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>12</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airline!Delay!Cause_E1669AAE7A0741A1B8F4D718D1130AF4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Date</remote-alias>
              <ordinal>2</ordinal>
              <family>Airline_Delay_Cause</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>67</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airline!Delay!Cause_E1669AAE7A0741A1B8F4D718D1130AF4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>carrier</remote-name>
              <remote-type>129</remote-type>
              <local-name>[carrier]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>carrier</remote-alias>
              <ordinal>3</ordinal>
              <family>Airline_Delay_Cause</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>19</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airline!Delay!Cause_E1669AAE7A0741A1B8F4D718D1130AF4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>carrier_name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[carrier_name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>carrier_name</remote-alias>
              <ordinal>4</ordinal>
              <family>Airline_Delay_Cause</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>20</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airline!Delay!Cause_E1669AAE7A0741A1B8F4D718D1130AF4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>airport</remote-name>
              <remote-type>129</remote-type>
              <local-name>[airport]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>airport</remote-alias>
              <ordinal>5</ordinal>
              <family>Airline_Delay_Cause</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>967</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airline!Delay!Cause_E1669AAE7A0741A1B8F4D718D1130AF4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>city</remote-name>
              <remote-type>129</remote-type>
              <local-name>[city]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>city</remote-alias>
              <ordinal>6</ordinal>
              <family>Airline_Delay_Cause</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>892</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airline!Delay!Cause_E1669AAE7A0741A1B8F4D718D1130AF4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>state</remote-name>
              <remote-type>129</remote-type>
              <local-name>[state]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>state</remote-alias>
              <ordinal>7</ordinal>
              <family>Airline_Delay_Cause</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>61</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airline!Delay!Cause_E1669AAE7A0741A1B8F4D718D1130AF4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>airport_name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[airport_name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>airport_name</remote-alias>
              <ordinal>8</ordinal>
              <family>Airline_Delay_Cause</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>966</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airline!Delay!Cause_E1669AAE7A0741A1B8F4D718D1130AF4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>arr_delay</remote-name>
              <remote-type>20</remote-type>
              <local-name>[arr_delay]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>arr_delay</remote-alias>
              <ordinal>9</ordinal>
              <family>Airline_Delay_Cause</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>10024</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airline!Delay!Cause_E1669AAE7A0741A1B8F4D718D1130AF4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>carrier_delay</remote-name>
              <remote-type>20</remote-type>
              <local-name>[carrier_delay]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>carrier_delay</remote-alias>
              <ordinal>10</ordinal>
              <family>Airline_Delay_Cause</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6381</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airline!Delay!Cause_E1669AAE7A0741A1B8F4D718D1130AF4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>weather_delay</remote-name>
              <remote-type>20</remote-type>
              <local-name>[weather_delay]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>weather_delay</remote-alias>
              <ordinal>11</ordinal>
              <family>Airline_Delay_Cause</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2494</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airline!Delay!Cause_E1669AAE7A0741A1B8F4D718D1130AF4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>nas_delay</remote-name>
              <remote-type>20</remote-type>
              <local-name>[nas_delay]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>nas_delay</remote-alias>
              <ordinal>12</ordinal>
              <family>Airline_Delay_Cause</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3601</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airline!Delay!Cause_E1669AAE7A0741A1B8F4D718D1130AF4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>security_delay</remote-name>
              <remote-type>20</remote-type>
              <local-name>[security_delay]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>security_delay</remote-alias>
              <ordinal>13</ordinal>
              <family>Airline_Delay_Cause</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>797</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airline!Delay!Cause_E1669AAE7A0741A1B8F4D718D1130AF4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>late_aircraft_delay</remote-name>
              <remote-type>20</remote-type>
              <local-name>[late_aircraft_delay]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>late_aircraft_delay</remote-alias>
              <ordinal>14</ordinal>
              <family>Airline_Delay_Cause</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6159</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airline!Delay!Cause_E1669AAE7A0741A1B8F4D718D1130AF4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:carrier:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;HA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;9E&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;DL&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;OH&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;MQ&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;EV&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;YV&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;AA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;VX&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;F9&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;OO&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;QX&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;WN&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;YX&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;nb&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;G4&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;AS&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;UA&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;NK&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;B6&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:city:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Alexandria&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Belleville&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bullhead City&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cleveland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Devils Lake&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Fayetteville&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Greensboro/High Point&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Honolulu&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kalispell&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lewisburg&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Medford&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Myrtle Beach&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ontario&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Portsmouth&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sacramento&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Savannah&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Stockton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Aberdeen&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Augusta&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Boston&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Charlotte Amalie&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dayton&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Elmira/Corning&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Garden City&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hattiesburg/Laurel&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jacksonville&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lafayette&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lynchburg&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mobile&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Norfolk&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Philadelphia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rhinelander&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sanford&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;St. Augustine&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Twin Falls&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Worcester&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Akron&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bangor&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bristol/Johnson City/Kingsport&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Chicago&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Del Rio&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Evansville&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Grand Junction&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hibbing&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Joplin&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Laredo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Manhattan/Ft. Riley&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Montgomery&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ogden&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Plattsburgh&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rochester&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Santa Maria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;St. Petersburg&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vernal&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Youngstown/Warren&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Anchorage&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bethel&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cape Girardeau&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Colorado Springs&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dothan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fort Dodge&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gulfport/Biloxi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Idaho Falls&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Key West&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lihue&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Miami&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;New Haven&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pago Pago&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pueblo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Salt Lake City&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sheridan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tampa&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;West Palm Beach/Palm Beach&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Allentown/Bethlehem/Easton&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bellingham&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Burbank&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cody&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dickinson&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Flagstaff&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Greenville&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Houston&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kansas City&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lewiston&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Melbourne&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nantucket&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Orlando&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Prescott&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saginaw/Bay City/Midland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Scottsbluff&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sun Valley/Hailey/Ketchum&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Waterloo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Alamosa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Barrow&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Brownsville&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Christiansted&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Denver&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Everett&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Grand Rapids&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hilo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Juneau&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Las Vegas&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Marquette&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Montrose/Delta&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ogdensburg&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pocatello&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Rock Springs&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Santa Rosa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;State College&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Victoria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Yuma&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Atlanta&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bloomington/Normal&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Charleston/Dunbar&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dallas&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;El Paso&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Fresno&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Harrisburg&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jackson&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kotzebue&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Louisville&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Missoula&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Niagara Falls&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Peoria&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Redding&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;San Juan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Spokane&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tucson&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Williston&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Abilene&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Austin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bozeman&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Charlottesville&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Daytona Beach&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Erie&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gillette&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hayden&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jacksonville/Camp Lejeune&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lake Charles&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Madison&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Moline&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;North Bend/Coos Bay&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Phoenix&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Richmond&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Santa Ana&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;St. Cloud&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tyler&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Wrangell&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ashland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bishop&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Champaign/Urbana&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cordova&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Eagle&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Fort Smith&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hancock/Houghton&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Islip&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kodiak&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Longview&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Minot&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Newburgh/Poughkeepsie&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pellston&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Raleigh/Durham&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;San Francisco&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sitka&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Traverse City&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Wichita Falls&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Albany&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Baton Rouge&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brunswick&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cincinnati&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Des Moines&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Fairbanks&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Great Falls&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hilton Head&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kahului&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Latrobe&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Martha&apos;s Vineyard&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mosinee&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Oklahoma City&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ponce&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rockford&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sarasota/Bradenton&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Staunton&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Waco&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Appleton&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Billings&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Casper&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Columbia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Dubuque&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fort Lauderdale&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gunnison&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Indianapolis&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Killeen&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lincoln&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Midland/Odessa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;New Orleans&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Palm Springs&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pullman&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;San Angelo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Shreveport&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Texarkana&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;West Yellowstone&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Arcata/Eureka&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Binghamton&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cedar City&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Columbus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Duluth&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fort Leonard Wood&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gustavus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;International Falls&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;King Salmon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Little Rock&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Milwaukee&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Panama City&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Punta Gorda&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;San Antonio&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sioux City&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tokeen&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;White Plains&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Aspen&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bismarck/Mandan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Charleston&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Corpus Christi&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Eau Claire&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Fort Wayne&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Harlingen/San Benito&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ithaca/Cortland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kona&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Los Angeles&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mission/McAllen/Edinburg&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Newport News/Williamsburg&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pensacola&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Rapid City&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;San Jose&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;South Bend&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Trenton&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Williamsport&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Atlantic City&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Boise&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Charlotte&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dallas/Fort Worth&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Elko&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gainesville&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hartford&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jackson/Vicksburg&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;La Crosse&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lubbock&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Moab&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nome&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Petersburg&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Reno&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;San Luis Obispo&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Springfield&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tulsa&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Wilmington&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Alpena&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bemidji&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Burlington&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cold Bay&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dillingham&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Flint&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Greer&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Huntsville&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kearney&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lexington&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Memphis&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Nashville&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Owensboro&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Providence&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Saipan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Scranton/Wilkes-Barre&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Syracuse&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Watertown&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Albuquerque&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Beaumont/Port Arthur&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Buffalo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Clarksburg/Fairmont&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Detroit&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fargo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Green Bay&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hobbs&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kalamazoo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lawton/Fort Sill&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mason City&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Muskegon&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Omaha&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Portland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Roswell&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sault Ste. Marie&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Stillwater&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Walla Walla&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Adak Island&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bakersfield&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Brainerd&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chattanooga&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Deadhorse&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Escanaba&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Grand Forks&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hays&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jamestown&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lansing&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mammoth Lakes&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Monroe&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;North Platte&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pierre&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Riverton/Lander&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Santa Barbara&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;St. George&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Valdosta&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Yakima&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Asheville&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Birmingham&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cedar Rapids/Iowa City&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Concord&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Durango&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Fort Myers&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hagerstown&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iron Mountain/Kingsfd&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Knoxville&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Long Beach&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Minneapolis&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Newark&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pasco/Kennewick/Richland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Quincy&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;San Diego&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sioux Falls&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Toledo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Wichita&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Amarillo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bend/Redmond&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Butte&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;College Station/Bryan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dodge City&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Fort Collins/Loveland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hyannis&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ketchikan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Liberal&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Meridian&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;New Bern/Morehead/Beaufort&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Paducah&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Provo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Salina&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Seattle&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tallahassee&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Wenatchee&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Aguadilla&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Baltimore&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Branson&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cheyenne&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Decatur&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eugene&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Grand Island&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Helena&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Johnstown&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Laramie&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Manchester&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Monterey&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Oakland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pittsburgh&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Roanoke&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Santa Fe&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;St. Louis&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Valparaiso&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Yakutat&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[City].[Name]' value='%null%' />
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
        <semantic-value key='[State].[Name]' value='%null%' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='year' />
        <field-sort-custom-order field='month' />
        <field-sort-custom-order field='Date' />
        <field-sort-custom-order field='carrier' />
        <field-sort-custom-order field='carrier_name' />
        <field-sort-custom-order field='airport' />
        <field-sort-custom-order field='city' />
        <field-sort-custom-order field='state' />
        <field-sort-custom-order field='airport_name' />
        <field-sort-custom-order field='arr_delay' />
        <field-sort-custom-order field='carrier_delay' />
        <field-sort-custom-order field='Calculation_792915062856564736' />
        <field-sort-custom-order field='weather_delay' />
        <field-sort-custom-order field='nas_delay' />
        <field-sort-custom-order field='security_delay' />
        <field-sort-custom-order field='late_aircraft_delay' />
        <field-sort-custom-order field='Geometry (generated)' />
        <field-sort-custom-order field='Latitude (generated)' />
        <field-sort-custom-order field='Longitude (generated)' />
        <field-sort-custom-order field=':Measure Names' />
        <field-sort-custom-order field='Multiple Values' />
      </field-sort-info>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Airline_Delay_Cause' id='Airline!Delay!Cause_E1669AAE7A0741A1B8F4D718D1130AF4'>
            <properties context=''>
              <relation connection='excel-direct.13b78kx0xcq3ul110pj9y1nj6juj' name='Airline_Delay_Cause' table='[Airline_Delay_Cause$]' type='table'>
                <columns gridOrigin='A1:O10001:no:A1:O10001:0' header='yes' outcome='2'>
                  <column datatype='integer' name='year' ordinal='0' />
                  <column datatype='integer' name='month' ordinal='1' />
                  <column datatype='date' date-parse-format='MMMM yyyy' name='Date' ordinal='2' />
                  <column datatype='string' name='carrier' ordinal='3' />
                  <column datatype='string' name='carrier_name' ordinal='4' />
                  <column datatype='string' name='airport' ordinal='5' />
                  <column datatype='string' name='city' ordinal='6' />
                  <column datatype='string' name='state' ordinal='7' />
                  <column datatype='string' name='airport_name' ordinal='8' />
                  <column datatype='integer' name='arr_delay' ordinal='9' />
                  <column datatype='integer' name='carrier_delay' ordinal='10' />
                  <column datatype='integer' name='weather_delay' ordinal='11' />
                  <column datatype='integer' name='nas_delay' ordinal='12' />
                  <column datatype='integer' name='security_delay' ordinal='13' />
                  <column datatype='integer' name='late_aircraft_delay' ordinal='14' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.04lojza1uh8vuz185ek9h1iakmoz'>
      <datasources>
        <datasource caption='Airline_Delay_Cause (Book1)' name='federated.04lojza1uh8vuz185ek9h1iakmoz' />
      </datasources>
      <datasource-dependencies datasource='federated.04lojza1uh8vuz185ek9h1iakmoz'>
        <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
        <column-instance column='[Date]' derivation='Month-Trunc' name='[tmn:Date:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <filter class='quantitative' column='[federated.04lojza1uh8vuz185ek9h1iakmoz].[tmn:Date:qk]' included-values='in-range'>
        <min>#2019-11-03 00:00:00#</min>
        <max>#2022-07-01 00:00:00#</max>
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1_047D528A60674A5C82ED3E6E40322359]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='US Flight Delay' type='sheet' worksheet='Map' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='US Flight Delay' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2_3BD2310128644CF4982F35E05A54DF6E]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='US Flight Delay' type='sheet' worksheet='Carrier' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='US Flight Delay' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action3_4CCF3E16C9054BCA92A9E43A520D3387]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='US Flight Delay' type='sheet' worksheet='Carrier Delay Percentage' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='US Flight Delay' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Carrier'>
      <table>
        <view>
          <datasources>
            <datasource caption='Airline_Delay_Cause (Book1)' name='federated.04lojza1uh8vuz185ek9h1iakmoz' />
          </datasources>
          <datasource-dependencies datasource='federated.04lojza1uh8vuz185ek9h1iakmoz'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column caption='Arr Delay' datatype='integer' name='[arr_delay]' role='measure' type='quantitative' />
            <column-instance column='[carrier_name]' derivation='Attribute' name='[attr:carrier_name:nk]' pivot='key' type='nominal' />
            <column caption='Carrier' datatype='string' name='[carrier]' role='dimension' type='nominal' />
            <column caption='Carrier Name' datatype='string' name='[carrier_name]' role='dimension' type='nominal' />
            <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[carrier]' derivation='None' name='[none:carrier:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[arr_delay]' derivation='Sum' name='[sum:arr_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Month-Trunc' name='[tmn:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.04lojza1uh8vuz185ek9h1iakmoz].[Action (City,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_047D528A60674A5C82ED3E6E40322359]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[city]' />
              <groupfilter function='level-members' level='[state]' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.04lojza1uh8vuz185ek9h1iakmoz].[none:carrier:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.04lojza1uh8vuz185ek9h1iakmoz].[sum:arr_delay:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.04lojza1uh8vuz185ek9h1iakmoz].[Action (City,State)]</column>
            <column>[federated.04lojza1uh8vuz185ek9h1iakmoz].[tmn:Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.04lojza1uh8vuz185ek9h1iakmoz].[none:carrier:nk]' />
              <tooltip column='[federated.04lojza1uh8vuz185ek9h1iakmoz].[attr:carrier_name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.04lojza1uh8vuz185ek9h1iakmoz].[sum:arr_delay:qk]</rows>
        <cols>[federated.04lojza1uh8vuz185ek9h1iakmoz].[none:carrier:nk]</cols>
      </table>
      <simple-id uuid='{CFEB4A38-4F90-4B32-B5B2-33D6C411BABC}' />
    </worksheet>
    <worksheet name='Carrier Delay Percentage'>
      <table>
        <view>
          <datasources>
            <datasource caption='Airline_Delay_Cause (Book1)' name='federated.04lojza1uh8vuz185ek9h1iakmoz' />
          </datasources>
          <datasource-dependencies datasource='federated.04lojza1uh8vuz185ek9h1iakmoz'>
            <column caption='Carrier Delay Presentation' datatype='real' name='[Calculation_792915062856564736]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[carrier_delay]/[arr_delay]' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column caption='Arr Delay' datatype='integer' name='[arr_delay]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_792915062856564736]' derivation='Avg' name='[avg:Calculation_792915062856564736:qk]' pivot='key' type='quantitative' />
            <column caption='Carrier' datatype='string' name='[carrier]' role='dimension' type='nominal' />
            <column caption='Carrier Delay' datatype='integer' name='[carrier_delay]' role='measure' type='quantitative' />
            <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Date]' derivation='Month-Trunc' name='[tmn:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.04lojza1uh8vuz185ek9h1iakmoz].[Action (Carrier)]'>
            <groupfilter function='level-members' level='[carrier]' user:ui-action-filter='[Action2_3BD2310128644CF4982F35E05A54DF6E]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.04lojza1uh8vuz185ek9h1iakmoz].[Action (City,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_047D528A60674A5C82ED3E6E40322359]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[city]' />
              <groupfilter function='level-members' level='[state]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.04lojza1uh8vuz185ek9h1iakmoz].[Action (City,State)]</column>
            <column>[federated.04lojza1uh8vuz185ek9h1iakmoz].[Action (Carrier)]</column>
            <column>[federated.04lojza1uh8vuz185ek9h1iakmoz].[tmn:Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.04lojza1uh8vuz185ek9h1iakmoz].[avg:Calculation_792915062856564736:qk]' value='p0.0%' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.04lojza1uh8vuz185ek9h1iakmoz].[avg:Calculation_792915062856564736:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.04lojza1uh8vuz185ek9h1iakmoz].[avg:Calculation_792915062856564736:qk]</rows>
        <cols>[federated.04lojza1uh8vuz185ek9h1iakmoz].[tmn:Date:qk]</cols>
      </table>
      <simple-id uuid='{017D2F8F-C0C1-45A9-B482-F9A4E4B49B47}' />
    </worksheet>
    <worksheet name='Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run>MAP&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Airline_Delay_Cause (Book1)' name='federated.04lojza1uh8vuz185ek9h1iakmoz' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.04lojza1uh8vuz185ek9h1iakmoz'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column caption='Airport Name' datatype='string' name='[airport_name]' role='dimension' type='nominal' />
            <column caption='Arr Delay' datatype='integer' name='[arr_delay]' role='measure' type='quantitative' />
            <column-instance column='[airport_name]' derivation='Attribute' name='[attr:airport_name:nk]' pivot='key' type='nominal' />
            <column caption='Carrier' datatype='string' name='[carrier]' role='dimension' type='nominal' />
            <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[arr_delay]' derivation='Sum' name='[sum:arr_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Month-Trunc' name='[tmn:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.04lojza1uh8vuz185ek9h1iakmoz].[Action (Carrier)]'>
            <groupfilter function='level-members' level='[carrier]' user:ui-action-filter='[Action2_3BD2310128644CF4982F35E05A54DF6E]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.04lojza1uh8vuz185ek9h1iakmoz].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.04lojza1uh8vuz185ek9h1iakmoz].[Longitude (generated)]' included-values='non-null' />
          <slices>
            <column>[federated.04lojza1uh8vuz185ek9h1iakmoz].[Latitude (generated)]</column>
            <column>[federated.04lojza1uh8vuz185ek9h1iakmoz].[Longitude (generated)]</column>
            <column>[federated.04lojza1uh8vuz185ek9h1iakmoz].[Action (Carrier)]</column>
            <column>[federated.04lojza1uh8vuz185ek9h1iakmoz].[tmn:Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.04lojza1uh8vuz185ek9h1iakmoz].[Longitude (generated)]' field-type='quantitative' max='33006782.860789873' min='18098125.238946836' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.04lojza1uh8vuz185ek9h1iakmoz].[Latitude (generated)]' field-type='quantitative' max='9008650.1195062585' min='-1049343.540382999' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.04lojza1uh8vuz185ek9h1iakmoz].[none:city:nk]' value='false' />
            <format attr='break-on-special' field='[federated.04lojza1uh8vuz185ek9h1iakmoz].[none:city:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.04lojza1uh8vuz185ek9h1iakmoz].[none:city:nk]' value='false' />
            <format attr='omit-on-special' field='[federated.04lojza1uh8vuz185ek9h1iakmoz].[none:state:nk]' value='false' />
            <format attr='break-on-special' field='[federated.04lojza1uh8vuz185ek9h1iakmoz].[none:state:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.04lojza1uh8vuz185ek9h1iakmoz].[none:state:nk]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
          </style-rule>
        </style>
        <panes _.fcp.Layers.true...customization-axis='layer'>
          <_.fcp.Layers.true...pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.04lojza1uh8vuz185ek9h1iakmoz].[none:state:nk]' />
              <tooltip column='[federated.04lojza1uh8vuz185ek9h1iakmoz].[attr:airport_name:nk]' />
            </encodings>
          </_.fcp.Layers.true...pane>
          <pane _.fcp.Layers.true...generated-title='State' id='0' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.04lojza1uh8vuz185ek9h1iakmoz].[none:state:nk]' />
              <color column='[federated.04lojza1uh8vuz185ek9h1iakmoz].[sum:arr_delay:qk]' />
              <tooltip column='[federated.04lojza1uh8vuz185ek9h1iakmoz].[attr:airport_name:nk]' />
              <geometry column='[federated.04lojza1uh8vuz185ek9h1iakmoz].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>State:&#9;</run>
                <run bold='true'><![CDATA[<[federated.04lojza1uh8vuz185ek9h1iakmoz].[none:state:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Airport Name:&#9;</run>
                <run bold='true'><![CDATA[<[federated.04lojza1uh8vuz185ek9h1iakmoz].[attr:airport_name:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Arr Delay:&#9;</run>
                <run bold='true'><![CDATA[<[federated.04lojza1uh8vuz185ek9h1iakmoz].[sum:arr_delay:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
          </pane>
          <_.fcp.Layers.true...pane generated-title='City' id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.04lojza1uh8vuz185ek9h1iakmoz].[none:city:nk]' />
              <size column='[federated.04lojza1uh8vuz185ek9h1iakmoz].[sum:arr_delay:qk]' />
              <lod column='[federated.04lojza1uh8vuz185ek9h1iakmoz].[none:city:nk]' />
              <tooltip column='[federated.04lojza1uh8vuz185ek9h1iakmoz].[attr:airport_name:nk]' />
              <lod column='[federated.04lojza1uh8vuz185ek9h1iakmoz].[none:state:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.4612706899642944' />
                <format attr='mark-transparency' value='193' />
              </style-rule>
            </style>
          </_.fcp.Layers.true...pane>
        </panes>
        <rows>[federated.04lojza1uh8vuz185ek9h1iakmoz].[Latitude (generated)]</rows>
        <cols>[federated.04lojza1uh8vuz185ek9h1iakmoz].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{4F7ED9AC-40E2-4A89-87BE-85D762BD5E82}' />
    </worksheet>
    <worksheet name='Total Delay'>
      <table>
        <view>
          <datasources>
            <datasource caption='Airline_Delay_Cause (Book1)' name='federated.04lojza1uh8vuz185ek9h1iakmoz' />
          </datasources>
          <datasource-dependencies datasource='federated.04lojza1uh8vuz185ek9h1iakmoz'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column caption='Arr Delay' datatype='integer' name='[arr_delay]' role='measure' type='quantitative' />
            <column caption='Carrier' datatype='string' name='[carrier]' role='dimension' type='nominal' />
            <column caption='Carrier Delay' datatype='integer' name='[carrier_delay]' role='measure' type='quantitative' />
            <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='Late Aircraft Delay' datatype='integer' name='[late_aircraft_delay]' role='measure' type='quantitative' />
            <column caption='Nas Delay' datatype='integer' name='[nas_delay]' role='measure' type='quantitative' />
            <column caption='Security Delay' datatype='integer' name='[security_delay]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[arr_delay]' derivation='Sum' name='[sum:arr_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[carrier_delay]' derivation='Sum' name='[sum:carrier_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[late_aircraft_delay]' derivation='Sum' name='[sum:late_aircraft_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[nas_delay]' derivation='Sum' name='[sum:nas_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[security_delay]' derivation='Sum' name='[sum:security_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[weather_delay]' derivation='Sum' name='[sum:weather_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Month-Trunc' name='[tmn:Date:qk]' pivot='key' type='quantitative' />
            <column caption='Weather Delay' datatype='integer' name='[weather_delay]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.04lojza1uh8vuz185ek9h1iakmoz].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.04lojza1uh8vuz185ek9h1iakmoz].[sum:arr_delay:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.04lojza1uh8vuz185ek9h1iakmoz].[sum:carrier_delay:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.04lojza1uh8vuz185ek9h1iakmoz].[sum:late_aircraft_delay:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.04lojza1uh8vuz185ek9h1iakmoz].[sum:nas_delay:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.04lojza1uh8vuz185ek9h1iakmoz].[sum:security_delay:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.04lojza1uh8vuz185ek9h1iakmoz].[sum:weather_delay:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.04lojza1uh8vuz185ek9h1iakmoz].[Action (Carrier)]'>
            <groupfilter function='level-members' level='[carrier]' user:ui-action-filter='[Action2_3BD2310128644CF4982F35E05A54DF6E]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.04lojza1uh8vuz185ek9h1iakmoz].[Action (City,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_047D528A60674A5C82ED3E6E40322359]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[city]' />
              <groupfilter function='level-members' level='[state]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.04lojza1uh8vuz185ek9h1iakmoz].[:Measure Names]</column>
            <column>[federated.04lojza1uh8vuz185ek9h1iakmoz].[Action (City,State)]</column>
            <column>[federated.04lojza1uh8vuz185ek9h1iakmoz].[Action (Carrier)]</column>
            <column>[federated.04lojza1uh8vuz185ek9h1iakmoz].[tmn:Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='font-size' value='20' />
            <format attr='text-align' value='center' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-width' data-class='subtotal' value='0' />
            <format attr='border-style' data-class='subtotal' value='none' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' field='[federated.04lojza1uh8vuz185ek9h1iakmoz].[:Measure Names]' value='bold' />
            <format attr='vertical-align' value='center' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='subtotal' value='0' />
            <format attr='border-style' data-class='subtotal' value='none' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.04lojza1uh8vuz185ek9h1iakmoz].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.04lojza1uh8vuz185ek9h1iakmoz].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{4DAA3461-7DDD-473E-AAA6-3E39D0D4940A}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='US Flight Delay'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='Airline_Delay_Cause (Book1)' name='federated.04lojza1uh8vuz185ek9h1iakmoz' />
      </datasources>
      <datasource-dependencies datasource='federated.04lojza1uh8vuz185ek9h1iakmoz'>
        <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
        <column-instance column='[Date]' derivation='Month-Trunc' name='[tmn:Date:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98002' id='22' param='vert' type-v2='layout-flow' w='99062' x='469' y='999'>
            <zone h='6242' id='23' type-v2='title' w='99062' x='469' y='999'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='91760' id='20' type-v2='layout-basic' w='99062' x='469' y='7241'>
              <zone h='87025' id='17' param='horz' type-v2='layout-flow' w='99062' x='469' y='11976'>
                <zone h='87025' id='15' type-v2='layout-basic' w='99062' x='469' y='11976'>
                  <zone h='77818' id='7' param='horz' type-v2='layout-flow' w='99062' x='469' y='21183'>
                    <zone h='77818' id='5' type-v2='layout-basic' w='99062' x='469' y='21183'>
                      <zone h='77818' id='3' name='Map' w='49531' x='469' y='21183'>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                      <zone h='38910' id='11' name='Carrier' w='49531' x='50000' y='21183'>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                      <zone h='38908' id='13' name='Carrier Delay Percentage' w='49531' x='50000' y='60093'>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                    </zone>
                  </zone>
                  <zone h='9207' id='14' name='Total Delay' show-title='false' w='99062' x='469' y='11976'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
              <zone h='4735' id='19' type-v2='layout-flow' w='99062' x='469' y='7241'>
                <zone h='4735' id='18' name='Carrier Delay Percentage' param='[federated.04lojza1uh8vuz185ek9h1iakmoz].[tmn:Date:qk]' show-title='false' type-v2='filter' values='database' w='99062' x='469' y='7241'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run fontalignment='1'>&lt;Sheet Name&gt;</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1100' minheight='1100' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='25' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98002' id='24' param='vert' type-v2='layout-flow' w='99062' x='469' y='999'>
                <zone h='6242' id='23' type-v2='title' w='99062' x='469' y='999'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='65' h='9207' id='14' is-fixed='true' name='Total Delay' show-title='false' w='99062' x='469' y='11976'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='77818' id='3' is-fixed='true' name='Map' w='49531' x='469' y='21183'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='38910' id='11' is-fixed='true' name='Carrier' w='49531' x='50000' y='21183'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='4735' id='18' name='Carrier Delay Percentage' param='[federated.04lojza1uh8vuz185ek9h1iakmoz].[tmn:Date:qk]' show-title='false' type-v2='filter' values='database' w='99062' x='469' y='7241'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='38908' id='13' is-fixed='true' name='Carrier Delay Percentage' w='49531' x='50000' y='60093'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{B7CE84A7-DF35-4A55-B962-1BBB54B4DF5B}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Map'>
      <cards>
        <edge name='left'>
          <strip size='100'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.04lojza1uh8vuz185ek9h1iakmoz].[sum:arr_delay:qk]' type='color' />
            <card pane-specification-id='2' param='[federated.04lojza1uh8vuz185ek9h1iakmoz].[sum:arr_delay:qk]' type='size' />
            <card pane-specification-id='2' param='[federated.04lojza1uh8vuz185ek9h1iakmoz].[none:city:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.04lojza1uh8vuz185ek9h1iakmoz].[none:airport_name:nk]</field>
            <field>[federated.04lojza1uh8vuz185ek9h1iakmoz].[none:city:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{D05ED1D0-FE30-4FB0-8388-A156B0B0020B}' />
    </window>
    <window class='worksheet' name='Carrier'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.04lojza1uh8vuz185ek9h1iakmoz].[none:carrier:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.04lojza1uh8vuz185ek9h1iakmoz].[none:carrier:nk]</field>
            <field>[federated.04lojza1uh8vuz185ek9h1iakmoz].[none:carrier_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3252ABD7-100A-4B5D-AC71-7A41230A9DAE}' />
    </window>
    <window class='worksheet' name='Carrier Delay Percentage'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.04lojza1uh8vuz185ek9h1iakmoz].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C1DB4CE5-8F58-484D-A0D9-BFDDC38FA7E2}' />
    </window>
    <window class='worksheet' name='Total Delay'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.04lojza1uh8vuz185ek9h1iakmoz].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F4396DAD-C1E8-428F-9EC0-274634A10E5C}' />
    </window>
    <window class='dashboard' maximized='true' name='US Flight Delay'>
      <viewpoints>
        <viewpoint name='Carrier'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Carrier Delay Percentage'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Map'>
          <zoom type='entire-view' />
          <highlight field='[federated.04lojza1uh8vuz185ek9h1iakmoz].[sum:arr_delay:qk]' type='size'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Total Delay'>
          <zoom type='fit-width' />
        </viewpoint>
      </viewpoints>
      <active id='18' />
      <simple-id uuid='{77AA78D5-BE1C-45B2-85A7-2B0B1CA12DE2}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Carrier' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAWyklEQVR4nO3d6W8ceX7f8XdVd/XF5n0fIimJ4ogjiToozVgaabRrz2KAjXdj2Gtk/Wwf
      JECQZ4Ef2ICxgP+AYJ/mSYIEdhBjkczGiXcze8zszlASNRIpipcO3vd9NMm+q6vq5wfkUDMr
      Hhq31KJY3xcwmK7qQ78G6sOu7v59+qcppRRCuJCmaZr+ugchxOskARCuJgEQriYBEK4mAXhD
      rE0/4r/+t7/jZ//0S1aj6X1vuzHRzUe/6c7RyN5s3tc9APFibn/6KTe+9+9pLvPh2FE+/ujn
      LK5HeO+Pf0jnL/4eB4um699l8otbHG8+ie2EmOzr4O7QPMoo4g+O2dwbS+B4i/mLP7mJ9rqf
      0CEhrwBviFTKIhgwAFAZGxMbTzJC38g8s9PTfPDn/44ybZ3W7/yAszVBVjc2+X8f/wa/18v6
      1BSr8Q1inip+KAf/18grwBviwsUWbn12h6tnawkkZpg2i7lcn2YWCOaXUJwfILVZQHFRGJYB
      dOrLiig+eZaLZ3Q2F7qoqqmWv3i/R5Mvwt4MSjnMjg2yFIczLScZedRHXlE5waIy0uvL1DU2
      kk7F8Rh5eMwN5jYcakv99PYMECip5liJQVIrpLwo+LqfyqGhaZp2aAOglELT5MVavDqH+ptg
      27Zf9xCECxzaAAiRCxIA4WoSAOFqEgDhahIA4WoSAOFqEgDhahIA4WoSAOFqh3oyXGI5ihl7
      fu57fl0xHsPzGkYkjppDHYC14UU2Jlef29/0x614DJnUJbInp0DC1V5CABTx9WUGh0ZImDaW
      mWBkaIhoygKlWJmfYnJ2GQVkUjGGh4aJpy0sM87s3DJKgXJspqYmsexDOTFVHGFZB8A2N+h5
      NElxUQG2ZTHQ8wB/fj69XQ+IRqYZnI2SXBlnYn6DvofdBMNBerp7icVWudvRTUYpzM05bt19
      SNx0XsZzEuKFZf0eYHNqkJWUwnn6lMbTF7H0AMeqq0iuzDA3vUjDW5epUCs8nV9DGUHqamrZ
      WJonbWs0VYYYX06izS9y/GQVsDUNWimFbds4e1QVLMtGz2SyHboQ2QfAY3ipb2qmtRK6nk6C
      baMUWBmbQMCLmbGwNQvQtw9usCwHXYP8uiYikwPovjwKPFEAdH3rRUkphb5HIcbr8eD1Hur3
      7+INkfVRFK5tYeN3t7g94af6+Bk8mwk+a2/Hn1fG5cZqbt/5jHHdQ+uV91hLzvF5++eECmvw
      ezQ0zYff3EBVHUdbi6HBTgts3zaYdsD1QrygQ1uJtCyLhfsTe34M6s+Xj0FFdg51JVKIXJAA
      CFeTAAhXkwAIV5MACFeTAAhXkwAIV5MACFeTAAhXkwAIV5MACFeTAAhXy3o2qGMn+eQXvyJU
      UsHJt1uJjfcwnYCiwgrOvFXF/TudWLrBhStXiUz2MrUcp7C8nlM1Xj5pH+X737uJY27y0f/5
      Fd/9kz8jPyBld5E7WQdAJZbYsPKoKa+moijM6OoGeaXV1DfWE515TPW5G9R4VhiZnScZtbj5
      /g16uzpJWjUUeSyWkw7MjFNQXYPzDeelfja6Tub3apRBQ+f68cJsn5ZwiawDoOfV8b3vVrK+
      MEb34zHe/dZ3sCyTri/uUFtRQLDSwKsMUGm8Hg+apuHz6TgK6poamB4ZR88o6gq2hvL1Rtju
      FUkrY6GZJvObJubvBSDs0zFNM9unJVwi6wAkN5ZZd/LwebZOXebmZqiqqUHTIL+0hLHxSRxf
      hGBeA8mVKTaim0SiDtUe0Hwl6ItdUPU2WnwWAI/n2SmQvsdsba/hxefz7bra4VbAfNk+LeES
      WQcgWFTO7OM+lghz8cwJkmtz9D7so/nSNcoL/JjJQTacMlrqSsgUn2fg6Shn2y4R0k28Pi9l
      4fOovBJUKkDQkPfkIreyDoCmeTh15uLOdn5pDe+U1uxs155ooXb7si+viEttl7a3DAw/EN4q
      wxMqz3YoQnxj8idXuJoEQLiaBEC4mgRAuJoEQLiaBEC4mgRAuJoEQLiaBEC42pH9ieXY5gb9
      Dzqf219VW8fx5tOvYUTiMDqyAbBtm9jmxnP7U6Wlr2E04rDK+hRIOTbdHZ9x+3YH82sxEhtL
      3Lt7l7nVKMqxGHn0kO7+ITKOIrY2zxd377EYiZNOrNHTN4xSCsc26eq8TyojK8SI3Mo6AI61
      igo1cv36NapLwgw8HuTcpTamn/SxujDKplFNbb7F6PQKA0+GOX+xlbHH/cRTcaZGxkk6iuTK
      BGPz66StQ/lL7eIIy342qO0lvjnN7z4doeHtNjxGgJDfoKTIx8rSJpWnmil2PCzMxTD8QYKB
      AIVhDxkLTjUUMzK1jrYW5eSxAuCbFWJ2i4tSCtM0sSxr1/s6jiOFGbEj+/cAvkKu37hOJr5G
      z9AsyrJwFCSTFsXFQWLRFIXeFLruJWNZOEqRTjt4POAraSS++Ag9rxK/tQa8vELMXkso6bou
      hRmxI+sAmNFlOvtHsC2blrZ30SLjtLffoqS6kdrGcjrv3mMBP23vvMOmvsGt9tuUH2si5POS
      DvgoCfpRlZXoGxZe+VBW5FjWAQgUVXHjRtWzHQUtVDS07Gy+e+NbO5fDJ89Sc/LZTUP5QPU7
      WxsVUmQXuSd/c4WrSQCEq0kAhKtJAISrSQCEq0kAhKtJAISrSQCEq0kAhKtJAISrSQCEq0kA
      hKu9lACoTJzffvwx6yZMPX7AZ7du0903RMZK0dXRzq2Oe8RNh/mJJ7S33+LpxAKJzXk+/V0n
      jlLYVoKPf/H/iZvSCBO5lf0SSUox9OQJoaAf04GFlSiNJ5upKKsgOvOIcGMbzd4VxifniK1G
      eO/6NXo7u0jk12BH19kwHdT8KKY/D8uWRpjIrexXiFmdIumrojQvhVIOTaeb2YgluH/3Lg1l
      AQqOhwg4IexIDMNr4NF1AgEd24bjJ6sYH1tAT5g0lvoBaYSJ3Mo+AGmbZGSOyYkxykPHOFUR
      pL6xkeW5afz5+SzOL+M11vD5S0iuzpBKp9mM21R5QQ/VoOYeokqa8KYWAGmEidzKOgCltSe4
      WnuC1foa/JUNxGaHuDc0TFXjOapqCokO9DGlQrSeLScVNnnY3UPDW2fICzooDMJaAxRXoOI6
      fu9uh7QQr85L+12g0toGAMINzVQ1NO/sf6u1beeyr6yOq2V1O9v+IFByamujsP5lDUWIFyYf
      gwpXkwAIV5MACFeTAAhXkwAIV5MACFeTAAhXO7LrAxzk//b/b37W+9Pn9v/Hb/01F+radrmH
      OIpcGwDbsck4mef2O8iMVDeRUyDhahIA4WovKQAOkyPDpGywUjH6e3vZSGRAKeYnhxkan0MB
      ZmKD/r5+oimLTDrK2MQ8Sm0tszQyPEhG+gAix15CABQrU8MM9D9mMwO9Pd1U1Tcw0NXJxsoE
      kxENI7nA6GyEnp4equuq6XvQTTy+Ts+DPkxHkV6fprN3iIQ0wkSOZf0m2LESjC0maaor237E
      IOXFhawXGyzMrXCs6TLlaoWnc+t4fCHKSkpZCo+TtqGpKszYUgJtYZXjx8uB3BVibGf3x7Yt
      WwozLpJ1AOaGBliLZZidG6U8UIPXtlEKTNMmlGeQSmWw9AygY20f3GbGQdcgr6aJyFQ/eqCA
      MFufyOSqEOPRd39sj9cjhRkXyToAdW+/S93bMN7rI7/5OLHxCJ+3txMsrKK5sYqOO+1M6l7O
      X7lGJLPI5+23yC+tI+D1EPcYhJwkqrQJPZJEkz6MyLGX9j3A8fNbSx2Vnb5E41cWYr/5Rx/s
      XC49+w5NX7lPfhFQ/+2tjS9PoYTIIfkYVLiaBEC4mgRAuJoEQLjavgEYHBzkk08+ydVYhMi5
      fQOwurrKxMQEKysrKCXTFMTR80KnQD/+8Y/l21FxJL3we4DBwUF+8pOfvMqxHCoqkUZFk8//
      J6+ER8q+X4S1trbS3NzMhx9+SFlZGZWVlbka12tnP51BbSae2++9efY1jEa8KvsGIBwOEw6H
      d7aDweArH5AQuXTgKZCVTvDo8SNiyTTy6i+OmgPnAukeD+bGIj//xz40r59zbVdpOV4tE9fE
      kXDwZDhNR9kZYtENjPxKxh58im38K84dKwbASaxy+8FjlJWhqukcav4xs2kPxYUVnDlVwd07
      XTi6h9Yr7xEZf8hsJEVeSS2naw1++bsh/vRPP0ClI/zD//ol//rP/w0FAc8BAxLi5TkwAI5l
      YuLn+h9+SJ7foLS0GKU/my+vB0u4fu0ac+OP2TAzrEU2MPLLqTlWx+bsE45dvEmNvsLw3DzJ
      pOLm++/T9+A+KaeGypDGUsKG6UkqGhu26pEvcp51wO0Oeox9rz9oDArUrlUc8SY6+BXATtPf
      P8DS5+2EA3n88D/8JZWBr99kcrifubUE1Y013Pjw+ygnw53PPqO6vAh/lReP8gIpPB4PmgZe
      Q8dRUNt0gpnhUTyORm146y+/4zgHN8IsC92y9myEWZa1byPMsiycvRphtr113z1CYFkZ5Pzv
      6DgwAMq2qD9zmcLpJ5T4YTMNlV/5MCgVXcVf2sBbBesMLSyiJVYoLq9AaQZFleUMDQ2R8kXJ
      K2kivTrN4vIS63GNWg/EvIV4NrvQqs9AbAZ48UaYYRh7NsIMw9i3EWYYBvo+jTDDMLA0bdeA
      eQ0DTQJwZBwYACNcypVzPtLHChhesjhZ9PXrfaEw8dlRIpqfttYWrNgKY5MznLl8lZKwjxPm
      ODGnjhM1RdQXX2B4bIbzly4Q0DMYAQ8VRW0QLESl8wj6ZG6eyK19A5Bcm+FnP/816e2zCd3j
      5fTZVirynt1G9wY41XJmZ9tfVM65ovKd7cq6E3z59ZkRLODtM2/v/NNeHxDaboIFirN8KkJ8
      c/sGwBcu5ea3P8BMRVmMmBQXhCj052poQrx6+55zeHxBqssL6bh9l8GJCdTiCPPpXA1NiFfv
      wJNuZVsEiqvwW+v0PRlFk08AxRFyYAA8oWLONxSRyng58f73aAgfdA8h3hz7BkA5aT767/+Z
      9r5JDM3kYc9j5Oc7xVGy75vg2Mwjwmc+5AfvbP2aT98nHzEehaaCnIxNiFdu3wBoRpie3/wP
      7n289cWPpuv86Mqf5WRgQuTC/n2A6mb++m/+NkdDESL3DnwTbGdSjE/NyPQvcSQdPPdA2Xzx
      218ztRghGo1iy0/4iyPkwAA4toNHS/OPP/17/uc//JTl52uyQryxDpwMp6EoP3GRH1x/F32X
      WZBfLcRUN53DiE4yuRwnkF/BpZZqOnYpxIRLanlLCjHiEDg4AB4vS0MP+GXGoro4zKkzFwh/
      Zf0IPVjC9feuMTe2VYiJRC1uvv8+j7vvMTuR4NjFm1TrK4xIIUYcQi+wPoBGY/NpltcWaH84
      SlHj1wMAMDnYz1xkqxCT3C69+HweTNMhz+/FK4UYcUjtGwDbTNDZcYvu3n7mFle4+K3vU53/
      9dukoqsEyhp4q3CrEBOwUiysrLK0bnG2pZrHw0OkDCnEiMNp3wAklsb4+PP7XLv5Ac2xKc5c
      u0bg9+7hC4WJzo5gbhdiPHaC4eFxzl2+TEHAy4nkOFH19UJM66ULBL8sxBReglCRFGLEa7H/
      F2G1b/NXf1nP1OgTOp4u8vjv/gt/8aN/S3no2W10b4Dmlq/8Wpo3j5azz7Yrjx1UiNkuz0gh
      RrwG+0+F0HRC4QJOn3+X0+ffxbHS2PLqL46Qb7RInu71y4oa4kiR41m4mgRAuJoEQLiaBEC4
      mgRAuJoEQLiaBEC42jf6HkBsUwrM6PP7dS8Yoef3i0NLAvAvYaeh4z89v7/4BFz4Uc6HI/7l
      sj4FUlaax70P6Lh7n7WYycLYY9pv36a7bwjLyfCkt4vOnkeYtmJ9aZq7HXeZWd4gFV+h88ET
      lFI4dpqOO3dIZaRvKXIr+1cAK0NZw2mOa3EGRsfwp+NcuXqNgK6xOf+UdLiBRmON0aklNuYn
      uXj5Mr1dvYRO17A4OU3i/Fuo5XHmIknOWIqA8RKelRAvKOsAaIE8wuYKvQOjnGptIzr7lO4v
      Okg7PppKNCoaWyhyYG4uhuHzE/AFyM/TyVhw6kQpwxNr6OtxTtZu/eaibdsHF2IyFppp7lmI
      MU1z30KMaZrYexViLBvTNEGpXfsGmUwGzc6wW04dpbBMc9fHFYdT1gFwzCg9j6a40HaFkN9L
      XkMzDc1+eu+1o3zFbKxHyfPG8Xh8JDMZbNsimXLweMBbWI+18Ag9vxZfZgV48UKMz+fbsxDj
      8/n2LcT4fD48+xRifD7fnoUYwzDQ9N3Do2//2+LNkXUAkmsLrMfjdHd+Qe3Jt7HXxliIJAmX
      1FN3vJqezk76CXCxrY2YEeVOx12qGpoJ+T1YIT/eggJUZSXapo3hkbnWIreyDkBeVTPfrWp+
      tqO6hKavXN929caz2zacprLh9M52KAxUXtzaKHsr26EI8Y3JF2HC1SQAwtUkAMLVJADC1SQA
      wtUkAMLVJADC1SQAwtUkAMLVJADC1SQAwtWyL8QoRWxjlYXFZSxH4VgmiwsLpDI2KEV0fZXV
      SBTF1oJ7iwuLpC0H20oTWY9uL4rhsLa6gu3IwhMit7IPQGKNpxMLrC/N8Gh4mse9Xaysb9DV
      2UMiukD3wCgTQ73MLMcZeNjJamSVB90DxDYX+NWv72ArhRVf5J8+/i2xtDTCRG5lPRtUzyul
      rbWIicEBPKEg65terpxuZrCvk5mJGU60XqGCZQbnlzA1P+dbWhh42EnaLuZUeZCJSBptZpYT
      zfXAsxVivvz/bhx7a5WX/VaI2WsFGOVsX3/QY+9xvW3baLbNbiuZKQX2HkUccThlHQClbAYe
      3CdY1URTbTld82NbpzWOwuPVtg5kTQEaSqntU56t+xY1nGRt4gke3U+x8ezA0TRtaxWWPeoB
      mqbtucILbJVe9lrF5cv77tU8+PL6vX4Gfmds+/zb4s2RdQASC08YXrI4acwxH/CT73Po7O4m
      k/HTdraGu50dzHgdjp+5wlpshq4HXVjkUe+FqBbEF1+C+gsQGQeeHUCO46DtcZhq+t4H8c4B
      vtdBqh0QkO3Hdti9EabrOpra/SDXNNAkAG+UrAMQLG/mOzfSAPj8Qapb3yGeSBIIhvDqGteu
      hrGVh2DQT1XhH5BIpgiE8tBxCBdoqLpvb/2eTm0JulcOHpFb2b8H8PrIz/96DzYcDu9c9gee
      /VCU5vF+5brts2jP9n09cvCL3JOjTriaBEC4mgRAuJoEQLiaBEC4mgRAuJoEQLiaBEC4mgRA
      uJoEQLiaBEC42ktphJnxCNPzawCszY9ze3uJJFs5TI88on9oEkcp0rE1Ou93sp7IYKbWGRya
      2poi7Vg8GujHtKQQI3LrJawRFmOgv4+RySUA5mZWuHTtOpdam0kujzGfzqdEW2dkZo2HPf20
      nG3hUfcD4okoTwaeknYUqbVJBoZmSGakEilyK/vZoEY+ly6epaN/a4UXr8+hu6Md3V9CQzhJ
      bcNlylWQ1blNjECIcCiP4nwPpg1NNfmMzsfQltY53lAMyBJJIrde+jKpzeeucFrX6Lt/ixRh
      VNLE8pigechsH9ym6aBrEKw8SWR2AD1QQshZB2SJJJFbWQcgE13m3sNeZpcSPCktQEXGWY1b
      eAIlnD7RwP2OO0xrXi6+c5V1e4XP229RVNlA0PCSNHzk6zaqogI9kkKXFZJEjmUdACO/nOvv
      f/Bsx/Hqr11//dt/uHO5qOUSjS3PrgsXAnXbSyhVl2Q7FCG+MVkp/hWwzTRmIvbcfiMYwusP
      voYRib1IAF6B+MoCcz0dz+2vOH2RkhOnd7mHeF3kizDhahIA4WpyCvQ69PfC7Ozz+6/fgHB+
      7sfjYv8Me7cnuDJaj/AAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Carrier Delay Percentage' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Map' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nOy96ZNk13Xg97tvyfdyr6y1u6p6Ra9ANzYCJAgSEimKEkeUNDMKRVihiHGE
      vzr8yX+B/wzb88EOR9gOz0zI9sworMUSLVJcABIgtgZ6Q+9V1V175Z5vu/6QdV/dfPleZlZ3
      gwDJPhHdVfWWu72zn3PPFR/dvyO7MuSJQIjJnpPxfwD4PY9Sx2dubg4hBFLKzFdt28ZxHDqd
      DlEUxc/mcjkMw8DzvIHrTwIiZT7qWhiGmKZ5MCWtPyEEhmEghEAIQRRFWJaF67oABEFAu90e
      279lWRQKhfjvKIrodrsEQUAul4vbU/eCIMAwDAzDAIh/qvVQ4w3DkDAM6Xa7Q33atk0+n8f3
      fXq9Hvl8nmazOTA39c9xHGzbptPp4Ps+AKZpUiwWU+fT6/Xo9Xrx+2psCgqFApZljV2XMAxp
      t9u4rotlWfHfOqj2pZQD/akx2rYdt1Wr1YTVlSGNJyQAQToBjEPGrt/DaHfjQaYhHoDv+zFC
      2baN7/tIKYmiCM/zJu4PDpBDSpn5fNY4DMPA9/14EWHwQ+pjUB9AIWipVEJKSa/XS+3XNM34
      Xz6fxzAMwjCk1+vR6XQIwxDLsmIETH5cBXt7e1Qqlcw5RFGEYRgDRGBZFtVqFcMwcF2XUqkU
      r7laD70927axLCtuS83XcZz4b3Wt1WphGMbAmqWtaz6fH1pHKeVAe1EUxcTneR6O4+D7Po7j
      ZBKCYkgK1LcIgqA/98xRPQY8Dvc9zDtRFNHr9eJFUQiW9bGToHNJtcBJQtDbnLRdHVRbukTr
      9XqYpkmhUKBardLtdmNktm075ux6f61Wi3a7HY8vl8tRKpXwPI8gCOj1ehQKhQFpBFCtVseu
      geM4QJ/owjDEdd0hJqQQZFQ7yTmreejXdQalgyL2pLQb16fq1/d9wjCkWq3GUmjUGPUxdTqd
      eMyPRQBJxHgaasfjjCHJbcc9D8Mc+zCg9zfJc3rfCqFs2465oXpOIaQOitBd1yUMQ3K5HO12
      G8/zcF03lgKHHX+v16PdbhOGIYVCgWKxOITM3W53QP1JG5s+fkWgyfUZtU5CCEql0hABKwiC
      YEhq6ASlr5llWRiGMfRtkxJKbzsM+1rPxASg61ZPFeEP+REVZz7MGCYhkLR3VH/Ja5P0rZ5x
      XXcIyRSMGlOxWIzVijAMabVasfqkCKFarY5VH5Og6+3dbhfTNDEMI0ZgRQBZY5VS4vv+ENct
      lUoxwrZardg2ywIlzbO4f5IwpJQ0m82Ye5umyfT09MDv7Xabdrs9IL0VrijiSI5pYgL4VXH5
      pDqifuoUrnRDRcWTjG9SItDbyRqLfj/5jH5fCEGxWMzkcjr4vo9pmvH7CiEbjQae5w3MFfpc
      rNVqxR+4XC6PRDj1jlJTlIHcarUolUqEYUi9Xo8NZQW6YZ0cQ9a8oygiDMORapSUcuT95FyC
      IBggTCEEYRiyt7cXq1HKSZKUaApv0tTap2oDPBYkkChNfdAnoevEWfrlcBf9Np9Et1fvTiIZ
      dAOs2+3G3FC3XXS9WaklrutSLpfj+77vx96tNNARIoqiASJQ6oLikIo753K52Fuzu7tLGIax
      Fy0IgoG+dI+WPi9lJ+nXkswpCIJM3Vy953kenudh2/bYb6LmqtZGjUvZUJ7nUSwWY8NY7ydN
      PVLwxRPAPqRxcHXNNE2CIIhdZYp7KCNuHIxaXF20Z40r6VpTHgjDMIYMab2vMAxjXVpHQmUT
      KE6pQLk6S6VS7GWZVPJ6nsf29nZMaGEYDujA+ljV37oDIUmcqp2kREv+rd7r9XqxIV8sFmm1
      Wplj1des2WwyNTU1lgDS1E/DMKhUKvFYoG8bKJdr2piT8IUTwDibQt3zfX/AV+x53pA9IIQY
      8HknkXIcIaSNQ0cQhRimadLr9bBte0DcpkkFPX4wjlgV11eqimVZsVifBKSUA/3o3FLngLor
      VnmjdO9NkuDT5pdU6xTSlUql1LXUv7N+T/nyS6XSyLklv11SOimwLCvVhaq+XxK+cAKI9gc7
      jgMo7ql/SCXe4WCCurdF57BJHTXNjZcGWepZLpeLvQmmaY5UjbLmlkV0jUYDIQSVSuWpeK2y
      xgXEga8sT8phoNPp4LpubGjrqqsOSWk0iY3kOE78bQ3DiAktCYoJhmE4Unop+MIJYFJtPM02
      AOKJJrmrCpCkGcpP4t/X3zdNM/Zm6CrOJDDOm6V0eNu2Y7fjYSFpSGb1pTwnunqk216T2E3q
      mVarFQfRxqmV6v4k65bL5QakVBYEQXAor98XSgBC9P+bZLDKUFOgEES5C9UzWaI2+XuaeB+n
      b5umieM4uK6LYRi0Wi06nU78YTzPi92Kqs0sz8y4/pSB97jID8NG/ygVT78XRdFQusekcRal
      eioVREoZp27ohqya3yTeq0khDEN2dnYA4oi6aZojYxpfuASYFJRRlvxQOiQ/9jhv0aQGphAi
      9ucrV6UeTFH95nI5wjCMObcaYxohjFM1pOwHrSYx8se1M47Qst57XI+ZDip9RKkmOlE6jjOR
      +jMJqHwpXfdXNpryDKWt+a8NAaSBcoHp3iFdtVCekFFGWZYqogjOdV1yudyAq67RaMSGqeJk
      hUKBRqOBYRhYlhXnDCU9LyqJaxJQuvk4SHLxLH0/6700UHbS4xCA7kEyTTO2BwqFQpyzUygU
      JlJpJgGlhipOr6+3YRgUi8WYQJJBvi+cAEYtb5oXZ5SoVu+kIbtyj6X1oX9ky7LizEi1gDoi
      qOeVt0EZZDDoKVLqi3INqveKxWLs958ExuXk6OuTdk1fw6Qdk/Ze0rX7OASg8pag/412d3dj
      97Fa17T0j8cBpQo3Go2B68oBoqujuVzuy0cAMDpDcxQHU9a+UkvSRJz68L1ebyh4o//uOE4c
      IFLXut1uTGSu68bEluay00Ws3qbv+7HrVL83ic0xKYwy7rPcmFnIn9ZemgNgVJ++79NoNOJk
      vXK5POBCflK1Soder0e9Xh+Q5vo8lPql3K1JD+AXTgCSYdVFQXKh0jxBSr9XXCXrnaQRnNTL
      VWq1Si9Qzyn3WxiGmWnGYRjG+xSS47ZtO04LEEKwt7f3VBEgObdk22nrkcXZk4GxpOs4CbpN
      lmxPzVepiAoZVdzhaYGOM6o/dU3KfqqHLkX1+cGXgADQPsgoL0X6q5J8Ph9HVdOeHefjV++o
      AFRSCkVRFCedJQ1s9b6yNfR56L8r408hRXJ+ymZ4UpgEscYZtopTJ6VFMkbgui6u69JsNlNj
      LUrvVsyhXC4ThmFsGz0tIlCpHSp1XG9XGcVphrZSwb5gAhjOMdERSF0bpyoofVxtmNERNMkd
      dIkwTsJAn4Mno8tCCHZ3d/F9P97IoRNgWjsKqZK5L8peSKZFHBaeJldNM4CVQavmprj51NQU
      rVaLbvdgY5NpmuRyudhNXCgUCIKAQqGQmmn6JCCEoFAoxHlTScaUBUpz+OIlwD6kibHkvSTo
      KozaMZXMWkwjqEmhUCjE+n4QBLH6UqlUME0Tz/NiY7ZYLMaiNo241OYPtZVQjUWlPai8/y87
      JDmsbdtxLEZtzSyXy8DBTj7l7dFjAocF1XZSEvu+H6ut+lZQxRSz4ND7AT43SOHwWXqsbujq
      hKLUD8VJ9czLpFqjfqqU4CykU1xM9V2v1/F9P04dViqLSorTbYDkmFV7juPEKoZSidQzT0MF
      epqQxSiSqmaz2SSXyw3sK0iqgSo1olKpPJYNoDxJwEBfyf3hOj4UCgU8zxu7rl88AYyANEJI
      ixomN4HrXCL5U30Yfc+rAn0hdcNNvaMCYSpvXvVtWdZQrnoSgiCI/dTqHb1fJQ2UqpEFWZLs
      MBJuHMOBdKM3KU3Vc4rJQN8rU6vVAGI3pHI/N5tNTNOkVCpNHP3VA1yq/TTQcUNpAaVSiWaz
      OZIIngoBRPXbGJVTj/dygnoH2k1w1DRvkXpHz/48aHrwef0DZqUaq2sqaKIWVqUn7+3tDbjS
      1EaWrDmkgb6ZX41JiW09E1SfX5o3K8vDM2osaa7mrLbS3k2+kxyPkgDq2+kSW6lJyi6YZK16
      vV68c02NYZSkhb6UUB7BYrHI3t5epjr0VAhA5OefRjOZhmnaQqlrSiSrIIfrukgph1Sb5EIl
      s0Gz+lFt6TkuOqgP+iRGqEqkU5vl1QYPpSrp0mJSItNVPX1/QJrKl3QMTDqXJHEahhFvcVRc
      V62Zvt69Xi9OVtQ35I+ahw66R0oZ5vq30fdaKMdIVjrM0yEAO70ezGEgTYSnGcNZRKK8KYpb
      qDwQ/fnk+1liPmt8WVxkEhdsVrtCCPL5PEKIWI1SerI+7iiKiKIoDqxJKWPCSCNmdV0hgcqm
      7Ha7qfsLxnnassauv6erNklCSzIlKfvVGZStlQVpqSAqmtzr9SgWi3S73diNDYPRZz2ynaZ2
      fbE2QApO6MiUhvzq99Tm9nV3XR0al/c/Lk6QbH/Uc1njVX+nfYAoimIvho5QpVIp3lWlPmRS
      z1VIpTYHJZ+Fg1QK3/djX7kOhmHEBKiQSM+lT1M39d/VfcWA9Haz1lJXkcZ5vmzbplqt0uv1
      CIKAfD4/UB8J+gShYhK6PZJGdMlv+KU0gsch+ihQiJSsOJDGwZMcVn9ff28SteBxVSAlzh3H
      iRFZFX9SqQTtdjs1J0ghma4fq5TsNAROW0+lKij3ZD6fx/O8eHN58l3Vrm3b5HK5uHyLXqFC
      J/bkWrqui23bMXHrDomsNAmlWiURWPewSSkplUoD+n5SQqn+9Da+lASQBskPkBT1+jMq8tpo
      NOI9o0lI8zAl+xo3hlH3kvpxGliWRblcjiu/KSLUd1SVy+XYLsgat953MoA1CRNJZkmqmAVk
      c2hVm0gRjj5fvXxJknlYlkU+nyeXy7G3tzcglarV6kh1aBSTUQRUKBRoNpsD6o8OSbX36dgA
      KZT2NGCUcZql16txqGzMrLx73XBK9jFK388igjR9f9y6qM0aaUimEF4VsRql9un9j+pvEqKE
      4f3LlmXFZVrUXuhkcp8C5eFSXh6VUAgMGL1qw0q3241VrqzvrLxHkyTSKQmjpJgujZQE0jfJ
      PBUC+DyQX0EaYibFa9L9p66Vy2VarVZq6b8sGIX8ae8r8d/pdAb81ckU6jSYZLeXkgTJ/kfN
      I5/PxzVUdYM3i5mMgyiK6HQ6cf0dZYSmgWEYcRxACBF7tGzbHkgmVMa/67qx2pY0eJV9o7Jq
      wzAcmUatq0TK4E+6TD3PY2pqKl7TL7UKpH+sLE/LqA+qXG0w/PEVZxnHQXXOlKZ/Kk+LSgdQ
      FRdGSa/DQJZqpd/Xx2xZVpyWkRYAehxmpZBIIeGodIY0G0oFv9LUNyFEZnu6BJm0fqgCXfon
      7btmsxkb7I9VGvGLhnGBEN0WaLVaFIvFIYTPemcSdU7/yFEUxQv6eebyZNkdybEqv7/ivk+r
      X9XPYWoVAXH0PM0rNM7BYBgGU1NTA+OYdMyO48Q7xZLj1avWTUQAXwbkz+IeaV4K/ZoKjOlt
      KM9LmkRI/j4pJFUVPViT1rYewFMEqtIKlF78OJC191X16zhOnKk5aQkUFVMRQqRWpB73rg6q
      Gpyaq1KXsuBxJagytlVsSHm7lAqt5j4RAXwZuH6W10Z9WJ2760gGxKkFWYidJQnU30kffprR
      nIR8Ph8bhOr5JLFKKQfce3q0Nq2iwyTIoLJWk5BUk5SnbBSo/g+bv5MFSkVUHqdJ9wSP875l
      rYvaZ5HP53EcJ05h1+edSQCfl2cn0Utm3zpip93Pekf/PS2opnNfHRGTz6n3J4G0MTabTYrF
      IpVKJS55qCfWwUFEMwgCGo1G7A1J6zcLCdKk86jkL+W31x0JozxMKt35aZQuUQQAfcmQtAv0
      b6MnONbr9Xg8qkiB/o6ab9pGG/3gjVKpRKPRGAiWZRLAJMj/eRLJOG9MchxJ0JFIzxJVf4/j
      pkpvnWQcaesgZb+MufL1+74fJ9LBwU4mtWkkay7j1DL9vvo3btxJz1AWqCjx0ypdojw/Km06
      zS5Q1Z5V/EYv5w59FUp5i1RVEBVIK5VKI89NUBt4dCn0RF6gx0XQNLde8vlRH3uSdtV9pWer
      PJpCoTCU2JbWjs4lFCfMCkZljVmlOaiyKtVqNd7YoZBK/7hq871+MkxyruPW/EnsGB1UasPT
      qt6gxpR1jhgcpC6MU43Ut9H3gwOxb38UESgpErurDz2Lx4BxiKv/nVY5IC3ZaxTy6v3pWYN6
      pTW9neQ+gqQqpdpRx/ro6pl6Nw3ZlMGp2srlcgMHwilDVPWh3IFJpBulDiZhEkIZ5XnRnzms
      6/FJQQgRB90UjKuLlJxHo9EYiMeMg6HWx3FVKSVbD1YJfJ8jp0+OfT7t+gGCDX4MZWwmEXEU
      V5uEuJLPqIzKNMgybtM8Ogr0VAUFhmHEWyeTBjX00w+SKbrKBkjum00z9EdB2j4KHbLa0a89
      TdVnUkjmFMFBbr++5zgN9Dmqg/kmkV5DBJC1OJ1mk/Wbt6k/WidfrXDspUvx891mi3x5dHnr
      tD4EYJhGnMyU/HBpnG+c0TYO9K2SSSIYpX/r1/TkM2UrGMZBCUC19zeZl6MXcFJuTn1+ymOU
      BP3apCqQGncWQY/T/SfdsPK0IY0xpVXrSMIor90oGClfVIf1jS0WDJtjp87ygxu3KBxfxsnn
      CYOAOx9eobG1zelXXqRTb+B1exx/4cKEIkggODDa0hB+HIef5JksRE4+k9VvUuXSc1eSp5FA
      fzO9Ht1U76pU46SLc1JIEr/+d9rvk8w7uQZKVfsikD8LsrxxyTXUVddWqxWrmzpBJOc11ghu
      PFznpYVlthp73GzssPjyZbZ2drj/6TXypRJbt+6SK+TZeP8Khm1jzdWIwhBDK6GhOk7lbonJ
      6JLgMJx+EtVLv5bcKaQOvdBPO0z2mUUkScTTMyGVYaerNVncadQckpmNKtCTFjRLG2OampbV
      19M0fJ8U0s5HS0KysqAKdKlzFlRBgjTCHkkAvWaLaWly8+4dgvkpppaOAjADyCjixi9+iQwj
      /vg73+0PQsCPfvxjPl37Ceff+hq9bhe3WMBM7G/VIXlFufGyitrqE1XPj/Mq6e/FE7esOLMx
      9gikpM8m200a4fp9dU2djD4OkmMfJzX1McSRzH3EVqpXWgxA6cOjskr1Z59W0dqnAepQ7nEH
      7qm1TH5/PbCYRtgjFaXexha1coVqpYKZCGkLw6A8XcOdrvLL999namoKz/dptloUAsnKlWvc
      evtdpJzMXRqGIQ8ePKC+ryMrQkjzyCT/Tj4zqZdDP7NLcYosbjPJHHSv0CSQJWkmuaYyNPUU
      DMdxUr0mCvknCexlnbzyRUFyp5mCpJNkVN1XYID76xI5VQIEns/Nd97lD7/xFscWl/i7t3+C
      Wzvw3yoVZ2Z5kU9/+BMWLlb43//9v+ON17/K9777B5w6eZJ6vc79lQd8dP0z5p47gb3vmw2D
      AMM08bs92vUGm9s73Nh4iJPLIYsu8406ly4+H08sDfGTH1LnAPrEJ0XE5MLqG631PkbBKLXp
      SSFNh1e2iN6+ql6RJOKnEcX9IkEvJpYE3TumcCNtG2yyWNrI0oiGaTC3eJT5mVmuXLuKOXuQ
      sBSFIXff/wgLAaZJ0c3jIXn9tdf4yquvxh3UarX+6X8Srl29xcLCAq7Rz9PebTfpdDtsPHrE
      ma+/DkB9Y5PVG7fIzc6xt7c3dPJ40is0yluSVFeyXKNZ97rdbmqUUtfp9XiAfl9vJ/luFowS
      4UmPxiiCUvtm9eJThtE/ySbLw6SP9zDek18lpKlBaeuk1k/3sKlnlTGc1CwspYUr/bexvcOD
      K1f5/lvfolgsstto0Iw8fM+jMjfL9Z/9gjNHFvn+H/0RQgi873n8+Gc/5aXLL6YOampqij//
      kz8dmlQURXz4yRXu3r5PNww44hS4V2+yWSxw/d5dXrt0OUY26Fdmu3HvDoV8gQunnxuYoN6f
      vjhZhJIkJh2R07h/WpvJigzJnPNkG6ZpsrGxQbFYHNrfqnOunZ0darVa5tjHgfrY8Qe2rIED
      RMbBJAdy/CpBrcPj5mWp99rt9kBekALx7sod2ZR9JPN6PR5+cIW3vvI6J46fAODuvXv86Bc/
      Z+bCc3zwd//IH/3+d3nh4vNPNUgipWRn5Rp/+/5HzF58gaDnkd9t8fyZs/3Bdzr8w7vvcPor
      L/Hg2g1eWTrJ3OxsqioE6QltyYVJ7thSz43Ko1HPJ49sTapfacSlvDVTU1Osr6/HFRhmZmao
      1+uxRNEJamFhYYDrpbk1k6CqL+tjy3o+rb1arfalMoJVMlzSqZBVCgbSHRb5fH4gyLZfnEsY
      Mjoo/LR35wHfeOUrsQ9bSsmP3/sFkWuz9sEV/uJf/RmXnn/hqUcIhRDUls7z/LFzdB5uIAyD
      drXA9du3EELwYOUByy9coN1osL32iOt3biEZ1m2TRnDWv2S0WUeAUUZslm2RRSx6P7Zt02w2
      abVatNttPM+jXC7HFR/UEaMqf0jK/pZOlf2oIqJ6n5Ma5sm/k/++zKDXYdVBVz2z1l9JPyXV
      0zxJlpQHHDIIAu6tP+K1Sy8CfR/st7/2dcIw5OjRo59raFwIwUsvvcTZdpsfv/M20XSF+5vr
      3L17l65jke+1mD++TGd3j/I33uD9T67wlUuXU8P++uLo9/Tfk16EcQZrmlqTBWm6vGmazM3N
      YZomR44cGVBThBBxqu7U1FS8R3Zvb28oAW/SuSUN+FGOAf1+spjYFwlS9itMJJlSmu01zibU
      o8n63GIWKoRg/sIZutUid+7fA/rZdUePHmV5eflXlhdSKBT47re+zYKwcednyS3Ns7P6kNvv
      vs/uxiaFcpnmzi69ksNnd26nekjSIJmWoCfAqVSGrMK7aVv6IF29SOOwalyqDZVlqdqtVCqx
      m1I/0iep/iSRfxJ3b3JM495R5/xm7Sz7VYIqoZiVcJhmpyXVWjXnUqlEu91mZ2dnMCipN9Da
      2SW3Vefc6ee4cfMGt27f/rzmNhZevHCRUi9gan6eC9/4Gueev0iw16QyN0NQb1JZmGcNn9v3
      76V+0DRjKEvdGUUE47xO4z6Cjqw6Eeo1dVRdHvXR0kp+p3mrdK49ru7+KOml3+t2u+zs7LC9
      vc3u7u4XqiKp8x50GPetk4xHBcKazWZMUHop+9iS8zpd6nfu893vfZ/dvT1+8LOfIvcrAFy+
      dOnzmmMm2LbNt994k4+ufso7H31Cc2eX2dCmO11g7doN6uE2hucSOC4nl48NicUsgzFNPVDX
      00TpYfRkHVnTVBX993a7HQfesoJUSWJSoCOFOoROP5xj1HhHEYHqU4EqMvurzgpVoDYT1ev1
      1OOlkjBq3vr6ep4Xr5cBsHr1Bju37nL5uXMIIfgPf/VX9HyP40eXKKeciPirAsuyeOXSZd56
      5TWcSpn6tEuhkGdhcZHNzx5S39zEqpa5c//ekJqSphcnOSsMI0xSVToMjDIwk9d934+5/jjD
      XIc0gtbLradFTQ87fv3vL/rgjlwuR61WS3XPTqICJlVkJWHjqhC765ucmV3g5RcuEYYhf/XX
      /5mHm+tUK1NM5UqcPHnyqU7occBxXWzHQRqC7XqdXCSZmjvCxvXPuNXzqc/Ncur4idSCWepn
      kiAUpEkLlYt0WPGv3p9ks7nev95X0g2r6+1pH1sdvKFyXaTsB7Me9yyu5Fqo2kpflFEsRD8y
      X6lUhur8j/PWqWfSpLEC4+zsAl958SVWHj7kr3/0/3Hj5k1e+YPvcPzVy9zZWHkqtWWeFE6f
      OsX5xWWQEtvJIYHq/BxOPo/0faxqmRv7LtM0LjqOs+oJU5MYilmQ5Y3IcsceBhzHSQ3kqPED
      cXmVrG82aZ6/Poe0ujq/ahBCxK7gSWCUIyIJxvz8PEIIPrhzk+rpExx74QJhGLB16w6vvvzy
      F6b/6SCE4M2vvcHugzVsx2GqXGHtxi3OnT/P8WPHKNWmeOR14oMqdHUiLaEuy5CaZMGeBA7b
      hzLKVZKbLlmS76tAWtJ7lGxv0kivXr5cdyE+jmR8GqCIYBJIcyZkgQH79RzNHO///Q+ob2zy
      2Y/f4ffffItzZ858KfzB0LcHKsUSJd/GMwUnF5dYmF+g0Wiwu/YIu1zk5q1bAAMEkIQsb4ru
      53/aHzjLHkh7LvnRpJTxAd56NDQ5Vh1B00Dlwx9mbnpdpXa7ze7uLltbW+zu7n4hkuFx7ZtR
      OGypB16+/CKf3bzJ8omT/N5f/psnMqY+DxBC8G/+8i/5m5/8M5EMwfP5+Qe/pDA7TbC2ipyf
      5WFzj3P7Z3ZluUH11Ig0V+Oovb+T7Bd4mvPVxz6JOzB5uIUCVYlZ1R86DERRNFRoKwiCeC+F
      EGJo7/OTQNJe0yHLU5fWRtq7qTaA+mVjY4OC6/Lma69/6ZAf+hMol8ucWTjC7vpGXJPTsCzu
      r2/z2U9/gSjm+flHH2Z+5CTX1KXEOHdfll3xNOeXprbpY8963rIsXNcdOCZIB+UHV4dSPA2Q
      sp/f1G63ByLWTwOeRM0a5+ZNggEQRhE52+aPv//HlEbUbfkywIuXX8RBMDczQ8l2aNxfZfnE
      cYIgYHezTuncSX5+9zM+vHY15iaj3JFwwB0mqUmjI6n6lySMx4VRatso9UwIEQd4svrX6xw9
      DVA6tjowfGtr66kQgYpCZ53toK9F2gagtDUcNW8DwDQMTpw4Qblc/tLo/FlgmiZ//if/kkq5
      wtzMDM1OG7/TZWp+ju2VVbYerCJNQbhQ459+/nZqHrzuJtW5TRRFcUUHdQSQOghbPQ8MGdl6
      ZYgsyOLsCrIMzGQwLO1jKqTRx/h5gkL+5FnH9Xr9qRjJyWxb1X4yPSOKovi0GR0OI52Nza2t
      JxrsFwG1Wo2c47C4uIjseSxcvshMrUatWuTqT99h894KpmUhiwduw1GGp04A6iAIdTiD4kRZ
      UiQJo1SZSf3WaePTpc4o+LwJQEnKNDur1+uxtbU1UH/zsONR9oqeBiGljO0XfUM3RKcAACAA
      SURBVK94r9cbOgj7sH1aszMzhxrglwWev3iRh48e8fGVK/idLisrK0jP48iJ47hTFR7euoMt
      Djh1micm7fdkBQcFSTVEN9b0v3VkVruQkqXTsyAZwNP/nnSn1ufptlaIqJA/yxBXXiPXdSmV
      SocykNPGr/YEJHd6qXvJ73sYLebLt//tEGAYBtvb21z/+XvMHFuiUixh3L7D3Q+v0Gk0MfJO
      jMxZHDlNXKZ5UpJcf5yhqjwkWZmkakz6e8mfWW2rGqJZyPK0Qc1bP8Fev5413k6nw87OTpx7
      o/6NKieZBOXs0KvojXIpj1rvNBDtdltmRRi/7CClZHV1lf/+3/6PzJ44RiVfgK5Hx+tROX2c
      ghR8/dJLA+7L5M9R+nXS7aZ++r4/sGlI/UyTNMl2kpwzazxJ3V+HcrkM9BPqkgif5jJ9UlDI
      P8qGmUTv1uemEt2ynA5KcqosznFg23Zc9FZle44jsMXFRfHl2gB6SBBCcOTIEV555VW8XpfA
      MPiTf/197t2/x8/fe4/f/b3vDNXBT/5MSoE0wtA/nEK4rAXOuqbbBmmcX+9jlDiXUsZVkNNS
      vMMwnIgAsvziSrr4vh9zXb0IwLg5jgJ9vp7n4ft+KgH4vh9v5E+Ly6SNXe2qS6t9pNzEar/F
      QDW/X2cJoEAVu1WcWXEPlc+uEFdHfDhQF0YhjOKoOmKqUw9HQfKD6dwzS01JnluQpvtnSRj1
      UyHV4xrD+XweKWWsOqp109WtLPXlsJKnVqul7mNoNBq02+2x/SVBrbN+Ppj6W500GUVR3Pbi
      4qL4tbYBFCiPgb5nVs970RdvFBfLgiRHnjRlOukmTY4hzbOTlBRJYkmLOWQZ9Glqybhx64dm
      SylTA4TJMTxuCnmWwa6kQnLdhRAjM1MVDpimOXAaj9p+2u12h+oL/VqrQArUhgnTNCkWi/GJ
      jcmFSnKoSTmWjlRZKddpkETASRF3Ush6J0tyKEQdVWtTV1OCIMiUdIclrDRQ/v7kuyoOo3R/
      tY7qdBk1FyX5gyCgVCoNcHd9HqokimKI+uaaX3sCUGqNonj14ZPZkzoyKn1W7chSgR3Vnno+
      2Q8cBMt0j0iW0Zt8Py2fR/cq6SpQlocqbWw6KPVHf19xcXXkaKfTGVAx0tr2PG+iqPiTQK/X
      S6/Vk9DxVWUMIfqp3vl8PpYGvV4PIURckDiNKahKG1EUxaf1KDvg154AoK+3qoVQoBAcDoI3
      6ncltpWRpQwktVMozSjVQX0I5epMugPTjOssSFOH0vrL0vv1/vSEP8MwYmmoKu0pbmsYBr1e
      L1USSCnjKtmfN4ySerp6pGeeBkGA67pDVbHT2ko6HBSj1KXarz0BKER3HGdgD6sQIt4rq2dB
      KmTSI5VpdSezvBrqmuM4sZdE11mTbRwG0myVrL/167rnQ//ISuokDwpX65UmBbrd7mMjf5Zn
      KQtUhW4pJblcLkZ65SZVEEVRXK5S94KN61NH/uTaxpX9Jp/elxeUfqg2mOsfWu0kSnMtjlMx
      RnEVVbVY6aKQbtRN6sHQn8+aY9q/5D0FqiiU2u1Wr9cHItxpG2OeZPvjqHd0CakklR4M8zwv
      PhhQQdL20NVX/dooKZu1lnp+2G8MAajACqSfkaV0zTRukLYhPW1x07iN+lCqjayw/2GQKtnn
      qHGlxS1UhqY6ME5dV3aSECL1TF019klUtyTo6zoqd0q/rvTycrkcSykFKilRb8NxnNSzhbPG
      m8V8dJX4N4IAgAEXWVK3VYcyl8ZUuMhSYZIIl1xY5WnISlabhDvq/WR5j8aBblADAyfPQ9/4
      VVFSFfAaNX99fLqjQL83KuKa5VDQ51ev11MdBFnbN3VJoY9t1BiyCBB+gwgA+gubdgyO4sxp
      YjXJsdMWLIn8+oIr/dV1XZrN5oC7MdlXFuhtJY3iUe/phrOaS3J/QlItazabsQE5yg2cNOrT
      7qUhVBI5s7hwkgh0ppWVSdrpdIZO1pwEsr4n/IYRABCL97TrKiSevK4jEQxzZf1ZBclFVcam
      2j44aVKW6j/Z/mFAIX/yDGPoSwHbtikUCpimSRT1z85qNBpDPvhk/3o7SemWxd0fxxGgqtHp
      bWYdM5XGGPTvlqZ+qXfUGcS6kf8bRwCjQCeOIVGoRWyTiK7eTUJyoaMoiut86u+MUi0OaySP
      g+Q4Pc/D8zwMw4jtIIUknuelnmaZbGscYT6Ouqb3qRvCYRjGWyyz1i1L5RllC+j3B86FO9Ro
      f83BMIwhj1DyYIvkVkcYnfabBMVxkqJ6HBFkPXNYUBJA59hqu6R+TWV3Zp0Iqa/HKB0+Oe7D
      GNBJJqD2Lat/k4KUMt57kCXFFOGoyLGCX/s4wGFABboKhcLQNkL9g6trycOs07wPOuh/m6ZJ
      p9OJk8vGQVp7TwrJcasotqpAfZhUkKS3ZZxtot4b16YOKl6TxnBG9aeCfOpchaQtpa6pGkd6
      3OS3SgL4vs/e3l4c6VSiUBeraR8mDVmyPDW6F0clZaXBYV13k8C4d5XLUZ/LqA00Sm/WPWw6
      PA2Xadb95LOj3rEsK3ZAJNtIji1ZiPi3igByuVzM/VVgSDdiYXSCWdaHgeHYAwwe7vY09fxx
      oDw/yq5R41GcX90PwzDz9EXoz1FtNBmF5LZtP5WtmHofaeuZBXpl7FEEqaTBQLzhSQb86wZC
      iLg2pvI/K8RU+wgUUSQhy0AcZSTD4CF647jl0zaGkyqb2lurdOGs0iP6O6rUyijuW6lU4sCb
      3v9h55NcS50xjQIV2U1T1fT20lSz3yoJAH3uWCgUqNVqA+5Hlf1YLBZHVoBLswcUqGBRsnSH
      +iBpbSZdi09D/VHjSwtcZZ06o8aSttd41JhUsCqtjMk4yGIGSbtlnAqUJp318ans0TT4rSMA
      ONg4Ua1W45QAvdxfPp/P9I7AZK4+/SPonqZR7aRx7Ek3ueseG2V3pEmpUWO/eft27FGZVK9X
      6zbK65XWb9J+GBVPeBzGoIhIVbBQtozqJ06bP1Srv0Ggc7tGoxEfWOH7PuVyOd5S2d7PM4d9
      bo5AGPsfS32UpLiVEokEBAII9vfUGobRP5VZCNQbkkF7Io7kqusQPzuElGK/gQT0PA93/6wA
      /f0kSCmJNOT6eHUVQwguv/DCxAinzidIC5Lpa5K8NoprZ8E4dTPZn9oWmbxXKBQOJNfYXn+D
      QcUFpqam6PV6NBqNuI5ms9nkw0+vsuY65IvlsW1JCX6njdtrsHDyGPeuXOP4C+f7N00QBAO4
      OkACQuxjqRzE5yF8H7zQ2tmj124zs3h08MEcIHuoFpPvAextbrHVDnD3N8kAFE6d5t7qCrNr
      a1QqlbFGpQK9TItKb/Z9f2BX3qQ2gR6DUf1nSTA921V/X7l606BYLJLP52OJ9VtNAHCQRpDP
      59na2sK2baIoYntnhwf37mIfXcJdOj5RW4Zt4XYllZlpnEKeysz02L51OIyYF0IgkRimQWV2
      ekjlyDLa478Nwc7KJvlabeB6b3GRH9y5S77TJdeTNK2Ab1y8yNTUVKpBmsvl4vKEerS50+mw
      t7c3ZIymzTGp+k1CeK7rxh62pCerUCjQarWGkiLz+Tyu68YV5eAZAQAHH+Ddq1fZbbaYti0K
      uRx/du4Mzfv3Me/f4ercERpjTmJEpqsbu+02pmFQHvH+43pMwk4bb3uT3PTswbVGt6+qlXLx
      /MIoouP7lPZtmzAMESnZlpbjUlpa6geOhMAJQ/7+yidMOzleWF5mZWOD2WqVqWqVWq2GEIKf
      vf02p0+dYn5+nkKhABBvTk9KgbS56pw+Den1YJZ6RpVVUbaPMpaVpyvprLAsi0KhQLvdHogy
      PyMADaZrNXZn5tkxDOYfrWI9Wse0fRxvh1dXevzo1FmiDLecjEJktxVTgP5BqxllZ5Ii/nHA
      cPPYtZnYfpBSYpSceAzJ/hRM5QV7jfuIo4sjubJhmkxfuICMIt7Z2iI/v8CjTofORx/xytIS
      n926xcsvvcyJEyfY3NxkZ2cnPlRd5UWpVIxk22ljG+UZ0n/XDxBPvpM8SUcIgeu6NBqNmHB+
      643gJAgh+MrFi1z/yc/ILRxhrtMhDHxc36Dg2yACyr0ue25evTDYwPoK4uN3EC9/DYDZ40ts
      rawxu7w4UpRH7YeI/MKTjDz+TVcddCNTCDEsgUozdOxpXG0jvtXpAIIgr1e9kwhhIEyT4twc
      YX2P87bNS9/7HtVqlbe++U2k7OfxFIpFpqenWV1dJZ/PU9tXr9Q+BH08Oncep67p7xx6dfaj
      2FLK+GhavbL1MwLQoFgs4kQhEmhaJmXPw8rtqwxC0LFtyr0uvmnStRP7ZueXkS/mQPT1znJt
      itsffUJ5ZhonP0p1etII6nh3YaZqAcgoQqjiAYZx4NkCIhnS6DxkqrjcVy92tvn9M2dYXlw8
      eCaKePejj/nZtet896XLXDh/nuXlZZrNJg8ePGBubi5OO1GGpz6epJGr7qeNPy22MQ7U0VA7
      Ozv88L2fk4vALLgszcwBzwhgAIQQTAu4++ghNxYWudxqUTAMAsPg+twCnmXjWRl1cgwDw81D
      0DeuTMvizCsvcvfKVY5fPIe/t0uuNmwUi/zsUxl71/Nx7OEaOwqklLjNVXrlpfja8lSbXXoE
      9PX2MBH7MA2LqeIyRBHG9jZfP36M9Y0Ntre2uPTCC2zv7PDup1e54UfM2xalciV+t1QqUSwW
      2djYoNfrxbZBPG9NSiVthDTVLYuI9eCf3rb6KYSg2Wxy5cY1jl4+j2GamJYFXp9RPSOABDx3
      4gS3P7tN23H5+fkXKHoePcvC2xeZpdYKzeJS6rs5GWEYgxx9/sQxrr79LksnlshpDhcjCrDD
      Lj37SQ4i17NPx1dnC61BWyQkRxjKsULIv3mHWtHh3ZV7NOt1FqwcNze3eeCHONMzGKLLxswC
      //eVT/lOuMNC6Sh3V1e5tb5BEEn83R1+5/VX8IMIx3GHOH1SjzdNM667lBYrSL6fJCK9vV6v
      x/b2Nr2SQ1EjcHt/U8wzAkiClLTWH2EXiziV6pDnx7ezj5DyHBfTG/Q/50tFakfmMfKDHFAK
      g9B4emex2dpusCwI8oMSyJ49w97dh1SWtDnJiJnda2zVLsaXdoIOR8+dxwUq8ii9Vptbn9zA
      rE4TBQHW/txkocDf31nH2/wMd24Oq9J3z/qh5B8//Tk1meeNV782ZAskQSGv2sSftjc4zW5I
      s38AVtYfUTo2n/r+MwJIwNLyMrMz18jhYT76gPLRRXaYh/0yqr3cVP8kme0t/GaTyO+xVGmy
      Uu8HywIRIE8sD3A0v9ujWD1QD5xOl8C2CCwnLZgMgAzDWDfPAiFga+0hYRCCGA4MG0IMBYqT
      UqLXaAwiojAGkN9vt8lZg6VI3FKR5197keb2Djvrq9TbHmaxRPHIIna+hjGXh8An2txgzjbZ
      DgNafoHd7W2aP/pn/vUf/YvYRaq8RCpwFo9dC4YlixgnCSfJ9WGQQLY7TRbdY4kFfkYA6SAl
      xakplud9FnY/gd5VPq6f5s5OBTPnIH0P0zSYmp2mcHIRZ/9QwbP7rze3t3l05x5HTp2Im/Q9
      n+21RxQqZfLlEoFtxe7UVs/GtQMsM2H49TxEYXzV7lK1wtT8/ik/Mv5vH/okoa5ICWEQYdv9
      vrfWHlGY7r+rqxWGFBzzIqYC2NxuEFx+nmQNOcMwCM0ixy5MYxiCzQcrrK8+YD7XJbe+wfK5
      lzl/+SK3b99GPNxgp9XiT7/7HcIgYG9vj+npabrdLq7rxpuGdnd3h/KYhBDxkVXJc8lU2fZR
      pdtXH65RmMs+BekZASSgz10ibNnCybuEQcDyYgX75GVC38caUzXNMC2iBJedWVxASnh09z4n
      L10k1D5i0UkP2RsTID+AWypSmqpO9GwQRDRaPuWpfTcn0Hq4O/CMAE53Bcf9PjJV7BJ+PeJm
      zRgSU4WiHV+aWVrk1ic/5OzZM7zw5kucPn0aKSWtVpt3b9yDE8/xnz7+lDPlIm9cvsTa2hpL
      S31bSnH2Uqk0UNI+manan0MQq0W5XC4udKs8RPrh3nfv3ePm2gNOfe2VobV4FgfIgE63i2Hb
      7FincGQTYYVs5871OdEEJQPrjx5x6vmzA9eqc31PT7fdptNoki8fGL6dRoON+w9ISfxJTXSL
      7wHdZouZI/MZD+0/qiGSbZtMT+2rM0FAtVhg1VsdemchCAfeLQWQi8BLaGRObvDCXK3Mztoq
      8199nSAI+MGPfsSVm5+Rf/WrfSR15lm7cY32ieOUSiWCICCXy9Hr9WJ3peu6cdAsTQXSS51/
      dOMWjU4Xy7IwZUi5oBIAJfV6g+1em+defXGkc+AZASSg1Wxiug6hcFjJvXaod3vtNoVC+tld
      ALWFee5/ep3nXr6E3/Pwez0eXbvJwplT5AqqYsP+XlXj4KO1tnexcjmc4qAhvbe5hZnLNqRH
      7WsQQYDR6aYSmS/AiW0TQSgjCCV2N8Qv7qNMbxeCFux7xMJOg7IFc/OLlMtl7q+scL0bYleO
      DCBgfXGZvW6Pk3Nz7O3tMTMzE6c2qNpNnucN2ANJBN5ubvHv3rvCHb8KIgdI8vUb/MUf/D5y
      /9mHV65SdCsY5mDk/t6jayzPnenHPHhGAEPQ6fUwx5z+kgU7D1ZYOrWced/Ju8wdX+KTn7xD
      capCznWRto2Vy+Hu+8n9/Q3bOU1NcjUfehiBIfraSKfZIowCCGV/Z0cCUazmIyLDJnD7GZ8D
      0VfXJXRd5J2VwUEKwS0Xnm9LLMDIu3zc2GErgumjR7TJTPX/AUQRjgXVk0c5P30CKSU37t7F
      XliARJBbBj7Wfs1Wpb602+34rAC1YT2LeBvNJv/rz66ympsB6wC5jzVN3Ifr+MeX2VnfIOe6
      RGGITATOHr5zl4fyNudPn+mvUfqn+u2FVreDkTOpeDtYkce2O3mawsyJ4zy4fpOzr76Y+Ux1
      dobKN6ZjRFy58dnAfXuM50fKfhao2E+fBnA2PLxpG5kbJADPrZG9G6APaXe3LMHPy1AOoUHE
      uu3BHoT37jN3/NhwG1ISmUV67RaLlxYJgoBb9RbMDcY4It9jIfDYazVZffgQ9nN6lLtTN4AV
      EZimGdcJbbVa/M1f/z+0S8eQuUHO/jBfwD/Wl0abK2ucefkydz+9RhT2k+QCz+fhZ3eouQXe
      fOMNjh/vZ/g+I4AENHs9zEKFFmWGnYijQUYR+VKB/PYGIgxpzy4M+zcZFumRVrR2HAx6iwRI
      6B3JsE2M0Z/XDiRFaTCUXCCgKwRdA6S0KZnziIKJXHtA2G5jJqK6ct8LUzLMuGx8EEVDxCX3
      9ijlLH6216Ky9ohvXTw/UEQs9s3vV/Db29sbSKbrdrvkj51izyuQBD/qs4Nuo4m7v+9bCAPC
      HjMbP+TWvQq/85XfY/E7ixiGERcNfkYAGkRRxOrWJtWZKcLH2C0qowgpQUQhRpR9DBFAY2MT
      t1xCIGlc+5DiG2+BeMy8oAkIp/9YYk+AlAT1Bt0bn070frfVIj89RWmfAKJIYBgQRh47a9fx
      d9d5977D8epJqrke9cT7xswsd4MAw7bZ3N6KN+Xr41J7Cj788EO6kQQJs/NlHMPl1uo6Nzaa
      RFPDwciOU2Jr7RGdZpO5Y0v4QUQ3MNnZanJh/iR//P1vIazhwlnPCECDzc1NrNrU+AfHQHtm
      X20agZjlfc+QRFC99GocaDssrN26Q2N7Z6JnhRBMH12gPN3P4+9ZgrCa59yLl1KlT9G/R8vu
      qwpSSjqNJusPNyhN93M6Wl2H3fZtbj38W6KNTQwpuf/BbWzHoebn8UUTgyK2PAVA3m9yNvyA
      ot1htwJBb5Z2uzLUb6+9Tq75n3ine4p364uEN/8PLPkieeb4V1c/4O8ufZXN8uBGHrXWMpJs
      7Ph88MtbtHqSVnuX4u++wtLZIkbKHJ8RgAbtTgfD2Vcn9P20E3LYGMbl5EifXlinYKkAzfht
      hzKKkJ0ORnGQ+y2cPMn04pGMt4Zh88EK6/dXEcIgCoPU7ZJKHdORHyDnurR3dwm8oxiWjRfe
      5eraXxNFAZZtQiQRlkkYhdzqPMTZ6XKk9ioA87ufcKS2yxyPAHBzPtPRT5DRMqblxL59y7LY
      W79DwQ2Zk02kcDBy3yEiTxvBf3zlmzSdgj5YXuj9DZtelZtXW3TaHvfqDYIgJJIC17L4ycf3
      WZot88q5xNZRnhHAAExPTxM9uIsslwmiiE9XVrh87NhAivAkMBSNXGuyePTAIDSwyJtqG+OE
      6othIIrZeUiTwuzyErPLSzHB3X/7fULPw9ISxbqNJvnKwT5oLwhwbBsrZ3PxKy/x/jsf8N4O
      hLmfYLFNIPqBtVnXpryvy3tBSGdnj5MFSZiD3alTXODvAUHk96jlXWyjTb7o0+jm9gsSBHx6
      +x7/eHeDDfe7/XkDcIDwTadwECKREieM2JBvQLBB+cJL+Fsd/CsbRGaEiALc/Xldu7/1jADG
      QblUwnu0yy/euQaAH0b88MN7QykGtghYOLk49H4UhkS+x15b06n3X3t4bZfy7PQQuu+tbzA7
      Jpg1CrqBTyRlqnifBGrnT7GxssbR0yfja265SNS4hygcQZg5HN0tbBhcfOkC1//xbfaskIAD
      wm56PjNS0vM8vDACEfGo3aOGh2eatI08FbGHA7iOw0bP4p9+/iknZxdxO10+uHOPbrGKLXwW
      va1+o4lpFSLIScFG1+N8y+R4q4shJfghxqcf0yo53PJDrHoT6RZoiL70nMrI4H1GABoIIVio
      zXDrnTWkMOg714e5f9Xscup3Th+q7UbzCrXTz8X9eK0Wvb093Nr0QA+NYJ2SOdv3YEwApjBS
      ZYjyrqi6OHAgmXQfu1tw8FfvI+QSUuyXjm8/xPvk32Kf+D7mkTcG2u21OzxY2aadnyKJnd1Q
      sr69BYaBK0y80MftNuitfUInFPyyNs8b8z1sIdlt+PyHtQXutzf5p7srvH7mAi0pmTm6QPno
      aNez4Yd87WfXqLQ6WPvp58IqYtgGkRnx6nNVPvyghd/rEgrJQjXHV86mq4nPCCABhbxDdg7C
      k4MQgt7ODnff/jGdsIHtuUSnlvpBG6AoZpCRJJJJL1J/TEVvF88qkIu6RFGIKfqSR6WDGkIg
      DAMZhTiNVbr7G2B0G0M/KHo6uMWpqWu0u0W28319XeTnsU7+KaJ2fkCdC8OQ//cH77JTPUaY
      q0FYBPYGh2lZca69a7icOHmJtrFDr1zFqVZ5X76EFdRp1z3WvC3qQR3LMbHGBB+LnZCOYxAZ
      gumVbeZaARiCSEoEfVa1ca9O0XU4PWvivjjLyTOXaNW3OXK0guOko/ozAkjAxk4d+RQK5llR
      gJAS3zz4sMrXvf3ZLehF5CkSRgHXf/kx7r5nRUaStYfbGGm1iESE7WyTmwpwpM/uto3Xmca8
      tR4/MlcwuPT6y0gJQa58UN/f8xCWRbW3wVZuti8FgoBOVMWU03SZ0/oxMeeH00AMwyDn2PT2
      acKSzxGIX6IzDF0mHKmeoWJUCDvb9PanI4WJb9ewpiUvVGqsbn9GwXFw7Rw96bMQbLBtTuHv
      S6OIFgKHVv4AVavbTUQUIYWBYQhMP8AXgmm/QLPrUSsJfvfP/3D/8I/nRn+nkXd/yyAIAt6+
      cmfAizMt62xTPrQnKBJGpn1raGkOpmUxdeoUxfl5vKBN4Pfo7vlYC/10akuYREgiGZAv3sC0
      PUIBbUxyUxHCj+i0jqGqXLY2biGl7HPh3Ey82ctud4gKBRqlRVTYTBoGgX2EO61vcuenV8kV
      12NcTtaUM0wD3w9Z5YAwi16Fuvs8Ul4FPWFawFz5JOcX3yQ0TVrlwbUw/IAIcCybU/MXAOjs
      bPN1+x7Hups8EFU+KVzCFzaCXH9uUoKURAi6Ta+/k02AEJJQQCAMLNNgrlSlfPz40FFYWfCM
      ADSQUuI6OZDtGOG3xbCfehKIUnR4pU7Uzp6hV68z1W4RLS5SmO3HBEwjh7CMAQ0slBEgse0t
      bHtbQyQBQmLb2wS5LXyvz8HDIKC9f8iE0NyrnZwNgY9oBANlG6WUOIU8wrKZf/7SSEL/8Q/e
      Iage7GFuFmYwmEbKI0h5H6JNFsozHJs9x3xQROw0kDULfULOXpujv7xNZJo8eP00odPn9H6n
      E08t8PcoR022zRqCfQla34TmHtv2EdrtkGVA9GmiX6FaMRXbxDmanf+fhGcEoIFt2/zXf/E9
      /rv/4f/k4YgTegq2ScVrUbcLh48RAHahwNKbX4/dj2I/M9E0LIyE+iWRGGGEnd9JSBSVrgmW
      vRcTgNfpsPvwUZxcFgRB3xCOoth1mKzWZhgG07NTbHzyMbUz57Gc9NSKi7Nz/LO2fWHB9KkY
      bT7zK0TiMsLb5HT1CNPSwmg1QHSJcjmQ0Gx43F/d5JW8xOr6gI/d9mIC6O3u8MPODCfyZTat
      Gt5OCGwiTINdr8tssM4lt0Nhr8mPjRzPhxFHzb4DIJ5PzsSZm6J0NjshMQnPCCABc7MznF2c
      4uGN3cxnzs4UWW5tcr26RCAmXMIEnRimiZFRMCsJOT8kFzCcs5MChUqZ4xfOxsdBCSHiTeaw
      v5Nrv1qbqqimDg68/sl1tlt13NClUhjerJ9brlH6dIWm27dXdkKTR2F/M47cN0YFAmlZB7vQ
      LAuXbeytd0Cepnnyd9lt9Ygsk241j4wiGg/XWFqco1I9jYwk3Y+vEkUR3WaT+1Ly3GyRt6rr
      WIFkxolYdab4v/w53go8ztkRecdG5GzyJ48w8zsvYrrj920oeEYACRBCUC25fdmawd2vbjSZ
      e/1FgsfN3ZkAet4qTq4fa1jEZqq1wM3iVj//zY8IHnWxFlyEZeB7evpGf8zqMGw9s1IhvKq2
      oIhDgayWae3u4cuQguNimX30EEGAtCxKtSlee66Ht3qThZLgZ5151oKDIJUV9CjNTCNNkyiX
      6+fmOw6F7hWC7mecqtRpmG+ycXF/D4Hn0bh7i7PnTlLWUlAWlo5w9ORx5pneXAAAH7tJREFU
      Pr56ndajdbygiSVikuLcMYP2lsN7TZ/f/7NvUbKLWEUXq1KIpemk8Ft5PsA4eO3SOeaNiFeE
      yVvC4qJlIKcDgnKIRLLZs7n26e3DqT8TeFZFFMVJdLZ94JVZt0OuWmU8bw4khDse3qd7hLse
      njdH4A/XG7IsKyYAM/Ip792KET4XhpTbg6dGAhQcB4HAEAaGZsMILbHv+JTF92e2ecHc4A+L
      KxjaxPxcnub2DgiBzOfBddld32CnPUW+Ok/Ln6X+aJO9lQd4rSatlXscna8NIL+UksXTJ7jz
      6TU808IpFHjo1HjomSAlbWlwPcjx8vNV/ps//x1mTxwnvzSLPVU6NPLDMwmQCidnFviT+Tke
      7eyRM0L28iGlHDTsCNoGUWjzydUtougKx1+8ONnCT0ArAolQwSpx4D4NRUTHsKF9msCvYZV3
      MS7U8HJLBO0ZxvExaTl0Zs7FKR2BbROk+N2XZmrs3V9hemp68CC93EGaRGhamLbN3XZIxzRj
      9BfAAm0q+0l+YbtF4xc/ome6LH39jzDN77MgDCqNFlEYcu/GbWq1KkdODlbe3lxZY+3eCkfO
      PkfJcbjRqNMOJP/TWoEjuYhtTzAddinIVb565uJEKeSj4JkESIGVD29TLRZZqnT59gvr/MWp
      LWpI5npm7O2LhMWn13f57O1f7geixsAEEiAyTAJzmCd14vpBBoE/Q7f7HL51bp/zp3ubur0A
      zwsHyoXo5UPscHhMhhAYQYhpZKt2DbPClcpLrHcK/E1zGakou7HN6eUS3W6T+uYWt37yE1oP
      7lF2DCzDYOqd9zEiKFYrlKdrlMsFjp09NYDAURSxs7nNqVdeIM8GObPIy8ePY1smZqnCvY7B
      pcUTLBaKFHIu8/OPn0Ki4JkESIHObt8FdGKxgmXsUMPgd5ouK23BP3FwxtaStcPagwJe7x0u
      fPP1Af9+FuR2WoSuTZjPMNQm5Wju8KYQHaSECEm+1SawTLxcLrYHrAhOr3s8mLZoOeN5YG67
      RVjIEbo2CMFe8Sjh6QLOBzdpFo+AEDi9JjlrCnn7NoVChbNvvYXhvYZVLINp0njpEmj7c4+c
      PsmdK1c5dfn5vm0iJe+8+z5nz55DmA5Uz2DLkOMzs1Tco7R6XZp3PuJytcbdRpPvfu2NJ+b+
      8IwAUsGtFujstdhuz9Bptei0LeywQI/uwHMPwhlyCOrrko9/8DYvfOurA/uJZZLFyghvajTi
      6nBCGNyVmu9HBJhmkzAYvWdBCEHe6XPxdu7A06TiEIEBt+dzeMbwe3FZ9CjE9bq03SLe9HAW
      aqFaZalosO11EL0Oz8/nOXXh0uBD2ib+KFnmRUIg4fp7H2LnbLrdHrPlCkeMOhuBw/ZOh/m5
      Iv0tvTYOEVs7DW50JEemKxw9evQZAXxesPzSKfZWt4kC2O0cpVlvEyC5Kfvc3yZEyAhP2HiA
      JwQ7OwbhD97hxW+9jpmzCdjCN24T0cVkCj9o0Xvv71mzkz5q9RG1bNPdR7hGwDqQ7ijdGrrS
      abZwikUir8W1X3xAJYoIBbTGJtUNbrFcb9xjmuf7Z5eNQbDp48e4cP0Gr52chzOnYlcoUQTG
      cB0h6BNhu17n0b0Vli6c79cA3T+oEGCHPlLOz/WJzjCgWugQuSHvdStce+jz3775ysSn3I+D
      ZwSQApWFGs9/7ys8eP8zOrst7OIu/8tNj819DrooN3DwuY62QVwIHu4aRP/wDi/87lnC0tV+
      qBII2SJ3rEej8vuUx5ldUrJQLXD84rlDjfm9f/gnZpdmgP0aRPvRXtcymT++PBT8GtizICP2
      8wrovN1j6/ZtAJZybbZS9t8ClGbn8NstLOmzWcjTunKVyLI5dvsO82sPaUxVuXbiOKFh0j9j
      QGAYAq/nsbuxydTCAjd++SFep4NhO31aEeIgsCUEhromBIYQ5EwPIXzW1+7DmcmDXaPgGQFk
      QPVIjer3+glh//jPb7Nz432UwflAzKc7dYRgvWnhXnuPYy/bmPv+9sjzMJwASQvB6AP3JEy6
      R2YArt/a4adXhsPXZavHn/2XMzjaRvZ++UMPU/YIZJ6phw/olKfoVqYQpsGWCLi0tIhhmgzX
      gIDA87h78za9rsfMhRfoANb8IlORZPnBTxFAbmuXk+cvsnumX35ESMmxrqRhCbYvQxQE7K6u
      0e5KTs4vUJQ+LcNmzSwSZkitXP0GR40uN69e4dvffGYD/Mrg29/4KndWN/jP762CEITsZ1hm
      7BTrBDmaO3VKUyUMyyLwfSwnz+ROt/QPK2TY97qkIEiIRWAMJ4BFIsVD5TeI2quI0rH+fGyb
      aD8gZjoOgWXhloqDG2E0aNcbiMDDLZcoTh/EIKJGo6+z7NfiibSzFEwJCz5YUcS1+3fx6z2Y
      qvH6QplysKcmwUzY4aPc7GAulVa4Nycjml2PIAjiCPaTwDM36AQghOAv/vj3+PrpCtXcQRHW
      WbNBwQjImya2ppPuPXLpeRaN3SbRfjqCZc4hmNwA1sGIehT9++T9OlaUXktUHqQGjRUg4d2/
      Jrz+vxE0V5CGSX1+CW8//bqWL/P1o0uZyA9QAS58dofjxcF0Cb9UYuXNN2keOcLGyy9R12oI
      +QL+cXeVv73+CTtGkdeXn+PreYeS7M/HkP1/lchjJhx0NoAkbDcI201kscRLL77IgwcPxsxy
      MngmASaEQqHAf/Uvv83//O//Iz9ZiQCD2fw0l2tz5C0HL4q4Vq/zwc4OXsfkzvtTzJ1s06n3
      kLLEqRMXhjagB6GHaVgpu78GJcuM9zFV7zob7mu0zbOMgvP5Plf7pJP9jKhdRMoI8sN+9MiQ
      +GHAgJPWD/tV2PZVDuveA6ZW1gje/4DVMDgYshDs2BbGxQv9aPDaKrPdVbrNLp16i516G3Pp
      LF5jl3c213ittUVucYYQQWhZGFYOATgyoOv3sAyzn44hDKQUWGHAf/G1V9na3mZ6evQRtJPC
      MwI4BNRmZ9mRPsKUHLGLfHVuGcsQhAYUIpNXajUiKflgd5duw+b+R1WQksVaBMetmDWrw+cs
      c7Kkraa1hBW16Jhzmc8oCXC9M3xd1RtVYMy8BDMvpbYTRCGGrQXCgpDiD6/Tu3iUYLHvfv1w
      d48X/uQPsBbmOb4vKW5//CnLF/sHgxdv3CIs5Nk1JY/e/SXSzhFh4ALy1ntMLyxx8pvfpvTB
      B1jlEtIQeJ0ugdcf/F7Pxq4UYx0/bLcw9rYpmwIMk2+8+eZE6zYJPCOAQ4BhGPz5t7/N7asf
      sNxssBkINsoRjULEkT0T1xOcr1T4eG+PUDv5YmM3pLH6gMpSXyUwcRHSRAiDkDZyTJ5nxzpC
      x5qs9EmypVbk8M9/9w5HF8qcvnQOy8lhO062ASklhnYgBqZB9/IyUbXvkK1vbVOcnyU8fxYH
      UEkShUo/wgvAa68gwgD+6W8QpkVk5mLZJwD/0SpbD+4hv/pVKjvrFJp7OHmXnBC0ylNMdyU7
      jzYxZxeY85tUjYDf++7vUq1WU0+LeRJ4RgCHACEEJxYX2Hw4S2QcYdko0qOJyEVMF3J0ov+/
      vTPtkeO6zvBza+/qvWejSGpEiaQ2UtSuyIjseJMDI0iM2AkQJwEM/wX/h/yCAPnoDwZiBEiA
      wEGMOAliJbZjy5Aja6EpWpQoiutwtp7p7qquvfKh59ZUL7NwNDMk5XqBAXqqq2qqp++5Z3vP
      OSE1NJ6as3hrYXMrtvUIqz5YHColVGFl5oRAIaTLptmz+1YpEqMjUYfqeNG4tACXb63yzrs/
      ZdoQHH1sltbcoCtzfaZF6Pl019YH883SFDVPxxCCeHbgH6RJwuKVa5x69qnx/42SqTc0BG6n
      Tex0UWBsuAaaxq3z5ykfe5BOc5a+YqDFIWG1RqSbNAF7fZ2161doux2+8ad/Qmtqf4YJjj3K
      gdz1U4xWq8UXPv95etfarF1e5qnIoiQiulrCVeGyEvRwo/w+nFIp6xiVgcOoYJJf4AIVBY2E
      yc7tVhBpjJKGxMrmsAuAZ2Y1LixH+PGw2RMLnbVEp+vB5bfXUNOlgb2tgxcpJKmCIlKmTZfn
      PJ+TTz85RvLrttdQNRVlpIGv6PmozmAEqhXByZWIy47HKqBpCsGEvqdhqcobb17iheceg3pj
      8OnFJpV7qd/n6y8+w5kHjlLeh35IW6GIAu0BmqYR2iCsgWPYDUGoOjO6iqYrfNzOLeYUZo9K
      h23Szj4at9lloyxilDQ3d3fjug/XYoJ4cngWBrtxgooQKvNihZmoTYJKLDRCdG75dV5//SP6
      6x3cbo9+z6HvOHiOSxxGgxGjI0htg3CDehGo0C4JwlYDZL3BhD6pgd3EqR3h4vkPNnIfAiVM
      sFcC+reX+fa5Z3np1GkqlfF+nvuJQgPsEdOz0yStFsuXF/DaDrYXUTVMFCPhZbfFT6/fQkkj
      1DSi63aZ4UkG7KAQwSa9OCWZsPvvTB1NhEGy4UQraYipJxBBx9/dIOnjLDErBvF3L9W5yaaJ
      4YUxt27cBkUZ8Jk2Hif0PGxzPDwaxRH6RhF6oghu1jXStEbp+Anijy4hfH9oFGtklOi1jqFq
      GotJg9uXr3Dk5MPYKyH6jQ7nHp7m9MmTB7rwJQoB2COEEKi6ytxjx0jDmPjiNUJPRYiELzeO
      cO7cNK1mHUPX+c+33sZrt7GaTSJcNNKNbgcpydX/Q+kukTzxEmzY4HecCk4TVGVroWlNt1hd
      Xh06FuVWZISKVbJQhEK17+ErKg9MtYg3Qo125yqB1cQTFrcvXBi7v3L5SjbhRmJx/Qoz514E
      IQjefRfpEfmlBsvzT28Kr1Xi/Zu3iZKEqQA+8/hZZk4f2Teuz04oBGAfIDQF5dgU+u01mjUb
      UVZpqSKryPrLV7/MrYUF3rt6jRv9AH3uCJo1WDBK7EEcbb/ppynLH36At3wbVx+nUiRJQqe/
      tdCMLn6A68zgpzoxCsvUoT9IPrlAJU0I6/XMPnZrg6KVsNOdKJpLuj409wxgpv4QilConHuR
      C12NfqlGrJmEZnksk30ljfCXlvmbb/w5pV3WSe8XCgHYDwiB0qwgmhWIY1heHvSw2ajLLZfL
      PDQ/z9EHHiAIAi59eJnLNz5mBYXSfK6iLBe9cTtd1i58QK1WHczp+vgSNz78iDfTUwTppK+t
      PKY4LE0QpxBO8AkUEbOuWHjxeHbaSct8fP49Hn56k96cpinLly/zxPPj+YMkZcw3kCWVSZzg
      oJPYJayoTSjGBbgRpfz1F//g0Bc/FAKwf9hgMqqqim3bOI4zmPVlGJRKJUqlElEU4TgOj546
      yemTj+C6Lu9c+gA3X1GWgpGG9K/e5IVnnqFaHQhAcvYsrQsXeffHFwni3ZlIG/m2MZQNhTAS
      kOYZops9gFOh8OH7C5w4d4YoSWg7Dg1Np1SyQAx6D8Ggs4UQAqEIoo0pN6MzudZu3EAREChl
      esZ4NEdLHD57rMVz8w+NvXcYKARgnyGEwLIsPM8jjmM8z6NSqWSzrsrlcjYG1LZtXn5663li
      eSiqxtmzZ/i2YfG9H71JJzJ2rB4bDYUCmJbF/IljdJ0+N67fQjcVZh+sUK4ZJElKZ8Vj6UaP
      9U5AFATopslsrUYchrhByIU330UI8J0+xx+ZZ27+OIqq0uv0cdprvP6Li1ga6CKhHQyWV0JM
      SbNRLJsyfey4x5J1dNCacWmRR5/fnt5xkCgE4AAghzj3+32SJCEMw6z9iBz8Jvv07Ab5xNaT
      j57kO40af/tPP2HFvzM2pKIoPHH2cSrVKlOAoqloFRdzo++mCrSO2Gi6Qi1Q0TaK4dM0BUVl
      /mQL0bsK9lmCpSXUNGVtYRFnrcv777c5e+4IL9eOMFvvEMZLfO/6MWKhIdKI5LfXmFYiLvsJ
      ghRVWyBNVXpxg9dKPV547o4+yr6hEIADgKIoQzu9HP0pSw5LpRLdbnfbe2w3NG92doaXH5vj
      h2+vDGuBrHxSTNQOhqJkAyMApo80cCN/6BwhBLWWhdXxiWMVTYuJ45T1dY+p1hFSrYny8Q10
      r4+3tMxnv/gq1ukzqJ9VWFxcpH6qglU26HldzB+/yX9cXuCyVsPXDOyZBslylDUTS6IUJQqI
      ojtLAu4nCgE4IKiqSqlUot/v4zjOoB/PRmG6YRhZk6qtkKc2TMLZ0yd47fwt3GSwoNXE56vP
      HkVTVdodh5+93yZWNsl25TTl1SDAuHadW/PzuFHISnsRu755f5VokJZTFU7MNqisLtL2+nhx
      zNpHVzDOPEF1egrVMlFVBRSVarWaZWqr1U0Ht0KT2W8eo/zrt/jNRzf4/Wde4tQjJ/jXH/8v
      33/jGqlQeWJOZR2dtOJzeWWJE63pPQ/62CuE67rp3fC+fxeQJAm+79PpDOYlVioVzI0duNfr
      ZRpiFJLbky9Sn4TffvAR//I/b/HxespDDYXvfOuPM1Prv371c37w+hWicBCefDBNeXVDqH5m
      mnyYJJSqGsdP17O/oYuEuVaVRq3K1889j6lpgxBrp0MQBCzcvs277WXMNEXpdPHimDOPPsbT
      T57ZddLK933+7vs/4J12yNxDVTQRo6om8zM1nntonmePze98k31Av9/Htm1RCMABI01TPM9j
      fX0dVVWp1Wqoqorruvi+P+QLTJrkAhNqeHMIw5DzFy9xdG6Wudnp7HyA7/7jv/HGtQFdQk9T
      XkgHkw/eEIJACCqtkKmpJnajhK4Kjs81sUslnj56nLNHxkcKJUnC4uIitm2jahqu69JzXU48
      +OAdZW2DIOC7r73GNddno4c1ZQ0eOT7L184+Q0nffW/PvUIKQGECHTBkVEjupK7rUqvVqFQq
      WJbF6urq0OIefb3TwtJ1nWefenLi3/3qZ5/j7b//bwJhEQrBL0bv1Ytpits8/fgLlKabmIbB
      w61p5huTi00UReHIkU1adtm22bpCYTLSNOXSxYv0Om10oRApBgkqfd/D6ffxwuhQBECiEIBD
      hud5lEolLMtC13XK5TKu6070B7ba9XeLI3OzfOXZeX7461ukI418a0rMUbXLX33jLzi1Ubh+
      GPD6fX71y1+wpjjo9aNoSUCoWqAPpsRULXPnm+wjCjboASNJEnq9HkEQbA6r2AiPCiGoVCo0
      m82MNrEfyJtQf/i5F3nquAYjxfFzesg3/+xrh7r4YaCZEjVhLfgtodNFpq+DMCVZcbOhd4eF
      QgAOGNIEiuM4s+k9z6PX62UmjqZpmKY5UQj2qgXkdbqu8+orZ1DZDHcasUPJ7PPE44/v8VPt
      HaZl8blXvsSZ5AzRpWW6NyNuXPO4ernPO+9do7cx3eawUJhABwy5wJvNJq7rEoYhvu/jum5G
      m1AUhWq1iqZp9Hq9sSSZ1BZ3oiHyYdQTcw8xXz/PRxszP0KlhG3r+6Zx7gRCCB45fZpvPXCU
      hX9/g0DR+YdbK1SmA6ZNmzdf/znzJ04wf/L0oTBCCw1wCJB9+SuVCo1GA8uySNOUbrc7NLnF
      tm3q9frELz5f9jh6760WcrpByNM0jS+/cIpS0oN0MF0x1quHRjkehRCCkmEyd/wIqQrPTJnM
      mTFm4tNZW+PmtausbxMc2E8UGuAQIRdro9HAcRy63S5xHGcNnoQQQ7v96Je+XVQofzx/nTz+
      3LkznH54nl++9R4fXl+m7a3S6/Wo1fY2BPATw9AoPfYga2srvL+wxrwdINKUKAppr67iug7N
      6YOpA86jEIC7ACEEpmnS6/UIwxAz16VB13UsyyIIAuI43jZbDAwlzLbbJYUQ1Go1vvIHg8nv
      vbgzlLk9bAghEM0KL3zp97j+z7eIvRQhyDLk1khu6qDMtcIEuktIkmTQKdl1iXN0aF3Xqdfr
      WQuQ3TjF0tSZZCZN+l1VVU7MPXJXfIBR6LrOmaeeYmFxiTgKieKYUrlKozUYdSo/10GhyATf
      JURRRLvdJoqijE8zasbIDPLoIpATHveyMKT2aTQad10A0jSl01nH83yqlQoXL/wGVdV4/MwZ
      TNPceL9DuVze935ARSb4LkNGhqQQxHE8FAYdzSBPWuxSCHYShLzvICdG3gsIw4Dzb7/DZ155
      BUVReO7Fl8bO2e+FP4pCA9xlxHFMp9MhDEMqlQqlUmlME7iuy/r6+lBoUwiB4ziYponv+1ku
      QUIOyp60y5fL5azS7F5HmqYEQTD02fYDhQa4R6CqKvV6nW63i+M46Lo+1PZbCIFt24RhiOMM
      +v/LXd/3fTzPw3VdDMMgSRJs28bzPGzbRtM0+v0+aZoSRREzMzMoinJfLHwJabIdFAoBuAcg
      cwD5bHEeMoITRRG+7w8dj6IIy7Lo9/tZnUGv18M0TcIwpFQq0el00HWdJEmGGKaHjWxGWRSR
      pilhOCiEkYO7NU0bm1180ChMoHsEOxXAwMBcWltbw/f9ofCnvMbzPDRNQ9vg8UvatWEYBEGA
      bduZRqlUKlv+nYOAdOpl1MuyrEyA8zwpwzCoVoeTdAchrIUJdI9hN1+yrDILgmCi82tZmxNi
      ZFJNZp3lezvlCw4KcRxnJp5t21l1nOu6CCEIwzArIIrjONNmmqah6/qBaYVCAO4z6Lo+5iQD
      Q9EjqR0mUQmkP7CbWoO9YCtNlqYptVoNXdeJoogoijAMg3K5nAlzFEUZX8rzvOx4qVSiUqkc
      iBAUAnCfQdM0LMvCdd2xCjKJUQEZPS+OY8IwxDD2XniSJAlxHGf3CsNwiNk6eu+8Y6/mukvn
      TThZNy3zHo7j4Hke/X6fOI6pVqv7ShuHQgDuS0xKjElM2oHla+kEJ0lCEAR7FoA0TVlbW8tM
      sfzxNE1pNBrb3lsKyqSFLImDcueX/k4QBLTbbRRFwTTNLFwsf6Io2pMDXQjAfYb84t+JIp03
      i/LXJklCv9/HNM09TVqU4ddJvoRhGDuGLXezgwsh0HWdqakpkiQZ0gSyoYCu65lW2GvCTPnN
      pffp9Xp7urjA4UNGTbZDnhsEmwtO7o5pmmYRpTtp0CWvDTfaII5CCLElnXsvkNpACJFFimRj
      sTiOM59Bap4kSe6YO6T51TI/uvgT/ujMF+5Kc9ICdwZd1ymVSriumx3bqVZgVFPknc5er0e9
      Xt+1XS1340mwLCuL5e8nVFUd4y6NhoFlG0rP8zAMg06ng2VZmXYolUoTk4Cau9qmFTUOnHNR
      YH8gq8eAiWZInvMzKRok7yFp1mEYEsfxrr5/aYtvpTV2om7vFVITbAfpG3ieh+M4rK2tZaNU
      pYDYtj3mRGvPP3xy32auFjgcSPpEpVKh1+tlFAmJSY7pqD8gEccx3W43Y1zmtYW8Vl4veUuj
      Cz2fxd1PbKXV8sg/i6RNjLadlEk4qR3yRUBaYfbcn5CRlGq1mvkF22mD/OtRBEFAGIYoikKl
      Usli9dLO9jwPVVW3bOfY7XaZmZnJklf7Cc/zshCrYRhZAk0iDEP6/X72fLKISJo+o1lw+Vnl
      /6Gwe+5zqKpKq9UijuOsisxxnDFncJIQyN1dLlq5w49C+gsAjuMM8ZFkoy/Lsj5RXmEraJqW
      mV3SFMqba4ZhjEWybNtmeXkZ27azhS8hN/zl5eXB/ff9iQscOmT8W9d10jTFNE3W19czshls
      nSyTESHpIG4XQZGOZrPZzI4lSZJxd/ZbAGQotF6vb3vOqFmkKApzc3PZ+6PnAxkXqhCATxmk
      qdBqtfA8D9/3t+QOyfNlCDFfYJM3ZeSxdrudFe3f69itKVYIwKcQ0j8ol8vYtk0QBBnJLAiC
      zDzarsPEJJOp2WxmERYZlpTn3K9RxPvzqQvsCnKBmqaJaZoZBcJxHKIoGnJo5TA/ycyUFAR5
      HxlFgYHd32g0svfkCKidElD3ouYoBOB3AHmymWVZmKaZ2fNRFGU0axkGldleWaopiWnSFq/V
      atliV1WVIAjo9XpD/JwkSTLWKQycVdu2x9isdxtFQczvMHZikUq6xOrqKoqijDEFpGZwHCdr
      8Duad8hrEcuysp+7XZhfFMQU2JFIJykIo10p8kk1mQOQjrSEdKTTNM1au0jNcOzYsXsm+VoI
      QIEtIZ3pmZkZgiDIoklSABYWFra0++U5cl6ypCGYpnno5ZjboRCAAjuiWq1mFGpZBHPr1i2q
      1Sq6rrO0tEQQBNRqNarVKr7vZ5TlSqUyRLaTNcv3Cu6dJylwT0N2roCBeSOTXvnCmtXVVVRV
      ZX19nenpaVqt1lAHO8kZupec4EIACuwaedtf1vLatk0URYRhyNTUFDdv3sw4+xL5BNu9tPih
      EIACnwByMctmXkmS0Gw2h7pT5M87rJ4/W5WLTsK90SSywKcCslahUqlkDvRoI669lGDeCdI0
      pd/v0263M9LedlVihQYosK+QvkIYhui6jmEYdLvdIWLeQbVjkdVqS0tLWa9V2OxEN4msVwhA
      gX2HoijU63U8z2NlZYVKpZLVFOzX4s871nLqpow++b7PyZMnURSFIAjwPC+ro5aUD4lCAAoc
      CKS9H8cxN2/ezApsAObm5j6RIEiqRq/XI0mSTLtEUYTjOExNTdHv97PiF3kNkP0uO1cUAlDg
      wCD9gKESxI1GuJ9UANbX14njeMi2lwX+QCZ8eSqGfJ0n+hVOcIEDg+xil2eLBkFAp9MZW7x3
      gq3an+SJfbJ5lsRodZx0kAsBKHBgkMX7cvyrDI8uLi5y6dKlISGQ5Dvf9+l0Oriui+d5E0s7
      JUM1r0XyvZLkNaMZ50nVY4UJVOBAIUl1spZXCJEN7ZDdog3DyOjZvu9nU29ku/f8wEDHcej1
      ekN9geTrJElwHCdb5PnI01YoBKDAoUHWDcsBeLK5V54uIcdEAZmwXL9+nUZj0LtKdoIbpVtr
      msbU1BTtdptyuTyxedckk6swgQocGoQYDOcol8scPXqUqakpbNseWvySNSpbtMho0sLCwlhL
      xjwFW2oaRVG23fkVRclmEgD8PxwNEhutncvgAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='70' name='Total Delay' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAABGCAYAAACaNZvCAAAACXBIWXMAABJ0AAASdAHeZh94
      AAALGElEQVR4nO2df2yTxx2Hn042WqgwWSiBtEDAINJCx4/6hRLUBBKWoBIQLVlhJWNRgYyw
      KdVGabsNLVaHaKaBGmlhVRijI2tDSyu3ZZKzNh2scTo3aUwLjIQGgcEpUZqUpME0gGpX3h+v
      89uviQmx/fLeI+WP+F5/3rvv3ee989373nuXz+fzIRBolO9FOgMCQSQRBhBoGmEAgaYRBhBo
      GmEAgaYRBhBoGmEAgaYRBhBoGmEAgaYRBhBoGmEAgaYRBhBomugzgKuMHElCkiQkaRV/aRhJ
      ffkvJXMjhYc/o8MbqlQOkiSRU+a6zZmMXrwdn3G4cCOZKd2x+wm/eKNxBM9ow+yvJ7Ptdkub
      o88A7Y4aGoGYmBigBXvdyDeu6x2nqNidR9amMpwhmkBLeJ1lbMrKY3fFKTquy59d7zjHJ2da
      I5uxYRBlBuii1l4HzCZ/Tz6zgcYaB+0jcaqkAiwOBw6HnYrSPObGgKe+hO0Hzo7E2dSPt4F9
      20uo98C45AJKK+w4HA7sx96gaNmEETxxKi84HDgcDl5Ivf3q0WWAriqOVgEJC5n/8HwWJgB1
      dmq7eg/pO+zwOsvJT0tGMtt6hzY5Zbi8Tsrz00iWzNy81xxFvLSF4t8uQQ80HT7C8e4kbwvH
      irq7+2TSNhRiDdpFtGEr3c7GrDSSJf93frydslNuAFoPb0aSJJKfe5+eInltmJMlpGQztmju
      fU5asTQBhix2/DEXKX4UAKMMM8hITfIfFLz8vcMZMzbc2IoeI0XKocwVpF5xUZYjIfmPk/HS
      cqyIjZkpcjzTNlBoddITPptZHt6abeC2UfRYitwuAhQrqgzgPV6LHdAvnM8sZvLDh/SAndrj
      AVrGNx9RtLUYx1XPwAQ+KtpKseMqA1OCYcjMIh3AfZrPmwFasRSs4TlLd3fv4eqZCsybd2Lr
      UlL5nKN/+5BTrd3n9nD14oeU/OplPvHChJVPkK4HT7WdniKdrKXaA4bVWSzWhZDhMOM6fQI3
      oE9bTurdSkcFL39fLpQX8LzlEtcHSijWay+tlgLWPGfhlH8c5rl6hgrzZnYOqpgLlBc8j+XS
      oLP0EFUGOFlbjQdYbJoL6Jg9Zx7gofKonYEWcL62l8pJeXJX3LdvdL7G3spJ5JVWYHe8wJB7
      TZ0Ouf158XqBs+9SXucBwxJ2vGPHUVNJ0XIDuK28/p7SoOx+fnrwXT6w1eBwOKixlbI+AXD/
      jzPNwN3LWJmpB08lR+1yiRpqbLgxkJn+EFHc/rlx/RoAxin3BTnqJuXvoZLS0nbSzG9hqykn
      N7E3RbFeezjLu+V1eDCwZMc72B01VBYtx4Ab6+vv9R8uV5ZS2p6G+S0bNeW5JAZQiyIDNFBj
      cwOzeWiufIkZN38B0wFPdS0nBx4+M5+yfVt6uuI+CeSX7WOLFM/AlKB4vX6T6dDpoOvcWZoA
      fVo2j08eBbo4MpanAHCiQWnW4/tcr/8rzzyRQbIksSg1n0MtfdN1LM5ajQEP1fZP8eKizt4C
      hkfJWBjNzR++HzMaAGdTc7CjblL+bgxk7jrEi6umMXpgsRXr1U/XOc7KFUP245MZhY64jOWk
      AJxooF/NGDLZdehFVk0brXhxiR4DuOqwtwDUU7zaP0W59mXOA7ht1AyYDjWmL8UYqFTGdJYG
      TAhOl72KjwEMD3L/fb1XPM+Rp3unTLdZ5c+8gQfr7Ud2sGX3B3yXXcL7dgcOh4WCpP7H6Bau
      Yd0UcFdWcbLdQU0jGB5NxxRyjsNL4oPzMACe/7yvOAQcSvllFrEs1RBQw5iuUK/d3LjONQDP
      EZ7umcrehhXA4+0/Uli0DIXT9BA1l53WmmqUZ5Pl6dBfzgrUiQ2Xb2lzvM7OXVbcwJR1q+XG
      ONWIgTrcSRso3ZPHvITR6PBy7esvab3xg4BK9Z9+jAc990ycgmHUt7SdtnNq0BVwJo+tm8f+
      3f/in3+eTx0JPJUV7c0fmJtF9pTD/L3Jyq7fGBn9+yeR4kfxrfscVSe+IyM1aYjlHybjpmI0
      QJ07iQ2le8ibl8BoHXivfc2XrTcIXDPKRIkB2vnowxOAnvRd/+ZPy3t/ZbVbtrK8qE6eDs29
      jQZoLCFbKun3kX52AXs2zZT/Ma1l0+y3Ka5/lfxVr/Y7LqnAQnnu4F+CicYkoJGqwnSkQuVT
      T1iawbzdu7FaqyDhKdJmDbcwYUA3iy17Cvgkp4T6j0vIX9EndlkvkZGaNOTyDw8TazfN5u3i
      el7NX0W/mkkqwFKei+Jv9ABExxCoqxZ7HaBPYdkj/bM/bumPWACDpkNvH3rGTJjDimf3Yz2Q
      26f7TSRn/5sUZc8hLsb/UUwc985ZwZoF9wRUSszZya+lMegB/ZgHyC4q5ueBhgATVvJEuh6A
      KSszUEP7B9AZczlg3c+zK3pjEhM3g4UPyOsAQy7/MEnM2c+bRdnM6a0Y4u6dw4o1CwhcM8rc
      JfYFCj/ea2f4x9aNvFyfQN6ht9kyM9I50i5RMgTSCi7KcrIp8f/Y0S/ZzJOi8UeU6BgCaQ39
      GKYuLWCfeQU3maQQjDBiCCTQNKIHEGgaYQCBphEGEGgaYQCBphEGEGgaYQCBphEGEGgaYQCB
      phEGEGgaYQCBphEGEGgaYQCBphEGEGiaiBjAe2wHkrSOV5yB09stW5GkZ6gI8QkwtenifIV1
      ksSOYwo7Yh3fTfpI7I86Aqgt9t26ETFA8xcXgUlMVNhR78qVDtDHEhvKw50q1OWSi/MkcO/E
      wM8lea904iaO2LEh6kYAtcW+WzcyBmhyBs30Jdd5ME4h2BZMd4TuFxchSAOX06cyOVThCKC6
      2Pt1I2CALjo7PUEy3Yxc75NDLJTadOFKZwfBGnhzkxOmJzIpRN3wo7bY9+pGwACX+epLgmT6
      Cp0dYIgdG+IDy2rThcttLUEauL+S4sYS/SMgtcW+VzcCBnDhbAyW6cu0tUBCfKgbXKhP98I5
      gjRwfyXFj2dciMrhR32x79Yd4WeC+++CMCyyXuqzWaradMFmlvDvrDg8/Js/jcQeeUNDbbEP
      rivWAQTaxhduqgp9JtNK3976wMmeo7/zmUw/87126Q7XvXjQt95k8m2zfhM4/fwB31rTIt8f
      /huibiRQW+z76Ia9BxipqT+16dLchBM9scrze5zHSNDt+KMEtcW+r26YDeClsaEektJ5JGCm
      23HUNMKSh0PcLlxtuuD8/DQeMlmyOHD68dpqSFjMgsgN9oeI2mLfXzfMBvDP204cr7CJ6RXk
      hb3YkHb4VZ+ufwEnIV5B18uVTjfExapgClRtse+vG3YDyAtwSpm+hLywF/J4QnW6ci+s1MBv
      fXEt/Kgv9n11w2uArk7kBTiFTLsucA6YMS3Efl9tuv4FHOUGLs9TJxmjfvyjvtgP0B3RdQBX
      WQ7Zt2dil5f6vPBObbrYzD2vVxoeSRRY+r9ULtyoLfY30xXrAAJtE+IM6rD4xrrNZzKt9x28
      GDj94sH1PpOp0Fd1h+v66vf6VppMvkKlL1YVBj1vNKG22A/UDWsPcFm+A0lx3vayfGNHyK+5
      UZsul9toYTqJCrd5tn/VBkxkfMjC4UdtsR+oG1YDuOQ7kBgb8M6mW5/6U52ufBccYxW+eMsP
      2EQA1cV+gG4YDdDOV20Ece2tTv2pTdd/9SKe8Qq3ed7qQx7hR22xH6wbRgPICxfMmKZwJ6M8
      PztdaVxwx+j6r15JRkVd9awBqC32g3XDaAB54ULx3m3//Gyc0rjgjtG9+QrnrT5gE37UFvvB
      uuIdYQJNI9YBBJpGGECgaYQBBJpGGECgaYQBBJpGGECgaf4PAfGJeT2iDdcAAAAASUVORK5C
      YII=
    </thumbnail>
    <thumbnail height='192' name='US Flight Delay' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
